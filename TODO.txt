Phase #1
    Basic openAi api Calling + Prompt Engineering
    Product Knowledge Aware
    
Phase #2
    Session Based 
        Short-Term Memory
        Long-Term Memory
    Recommend Products

Phase #3
    Retrieve Products | Orders Data
    Handle Cart | Checkout
    Redirect to Different Pages

After MVP-2
    Refactor Api function 
    Refactor App Endpoints
    Refactor RAG Module



Centeralized All the Object in FastApi 


Server.py 156 function selection and respone appending in a clean seperate function







Back-End:
    Server Building
    Ci/CD Pipeline
    MCP Connection 



Front-End:
    - Develop a theme extension for Shopify Store as frontend agent for llm powered chat
    - Unselectable Text

Admin Panel Features:
    - Enable/Disable Remember Mode
    - Switch Languages
    - custom MCP / Backend URL
    - Temperature settings
    - Max Token per Message

Future Goals:
    Front-End for Analytics
    Chat Record 
    Limits Settings
    
Cost Saving Plans:
    stateful - prompt engineering - summary of chat - only add summary in the next prompt (after 10-th message)
    or 
    Implement this also for each message when WebSearch is ON
    

Optimization:
    Efficient Remember Mode


Completed :
    Enable/Disable Remember Mode
    Markdown renderer on frontend


Anayze this :
{
  "data": [
  {
    "role": "system",
    "content": "You are a helpful assistant developed by Digilog (https://digilog.pk/). You can read and recommend products from the Digilog Shopify store. Respond only in text. Do not access or process personal data or company private details. If asked for such data, respond with 'Not eligible.'"
  },
  {
    "role": "assistant",
    "tool_calls": [
    {
      "id": "call_PjRZBMxYOYCiU0KgEIl4BGZV",
      "type": "function",
      "function":
      {
        "name": "get_products_data",
        "arguments": "{\"query\":\"microcontroller with wifi capabilities\"}"
      }
    }]
  },
  {
    "role": "tool",
    "content": "[{\"content\": \"<ul>\\r\\n\\t<li>RP2040 microcontroller chip designed by Raspberry Pi in the United Kingdom</li>\\r\\n\\t<li>Dual-core ARM Cortex M0+ processor, flexible clock running up to 133 MHz</li>\\r\\n\\t<li>264kB of SRAM, and 2MB of onboard Flash memory</li>\\r\\n\\t<li>\\n<a href=\\\"https://www.infineon.com/part/CYW43439?redirId=216343\\\" title=\\\"Cyw43439 - infineon technologies\\\" aria-label=\\\"Visit a webpage about Cyw43439 - infineon technologies\\\">Infineon CYW43439</a>\\u00a0wireless chip\\r\\n\\t<ul>\\r\\n\\t\\t<li>IEEE 802.11n wireless LAN</li>\\r\\n\\t\\t<li>Bluetooth 5.2 (not software supported at launch)</li>\\r\\n\\t\\t<li>WPA3</li>\\r\\n\\t\\t<li>SoftAP (up to 4 clients)</li>\\r\\n\\t\\t<li>Onboard antenna licenced from ABRACON (connected via SPI to the RP2040)</li>\\r\\n\\t</ul>\\r\\n\\t</li>\\r\\n\\t<li>Castellated module allows soldering directly to carrier boards</li>\\r\\n\\t<li>USB 1.1 Host and Device support</li>\\r\\n\\t<li>Low-power sleep and dormant modes</li>\\r\\n\\t<li>Drag &amp; drop programming using mass storage over USB</li>\\r\\n\\t<li>26 multi-function GPIO pins</li>\", \"metadata\": {\"Handle\": \"raspberry-pi-pico-w\", \"source\": \"Data/products_export_3.csv\", \"row\": 3222}, \"distance\": 0.8644827604293823}, {\"content\": \"<h2><span class=\\\"mw-headline\\\" id=\\\"Features\\\">Features</span></h2>\\n<ul>\\n<li>Low-power SoC equipped with RISC-V 32-bit single-core processor, up to 160MHz main frequency.</li>\\n<li>Supports 2.4GHz Wi-Fi (802.11 b/g/n) and Bluetooth\\u00ae 5 (LE).</li>\\n<li>400KB of SRAM and 384KB ROM, and 4MB of onboard Flash memory.</li>\\n<li>Castellated module and onboard ceramic antenna, allow soldering direct to carrier boards.</li>\", \"metadata\": {\"Handle\": \"esp32-c3-mini-development-board-with-2-4ghz-wi-fi-bluetooth-5-in-pakistan\", \"source\": \"Data/products_export_1.csv\", \"row\": 759}, \"distance\": 0.8814641237258911}, {\"content\": \"<li>Extra on-board peripherals: The UNO R4 WiFi introduces a range of on-board peripherals, including a 12-bit DAC, CAN BUS, and OP AMP, providing expanded capabilities and design flexibility.</li>\\n<li>Extended 24 V tolerance: The UNO R4 WiFi supports a wider input voltage range, allowing seamless integration with motors, LED strips, and other actuators using a single power source.</li>\\n<li>HID support: With built-in HID support, the UNO R4 WiFi can simulate a mouse or keyboard when connected to a computer via USB, making it easy to send keystrokes and mouse movements.</li>\\n<li>Wi-Fi\\u00ae and Bluetooth\\u00ae: The UNO R4 WiFi hosts an ESP32-S3 module, enabling makers to add wireless connectivity to their projects. Combined with the Arduino IoT Cloud, makers can monitor and control their projects remotely.</li>\", \"metadata\": {\"row\": 5457, \"source\": \"Data/products_export_1.csv\", \"Handle\": \"arduino-uno-r4-wifi-in-pakistan\"}, \"distance\": 0.914749264717102}, {\"content\": \"Title: RP2040 Raspberry Pi Pico W Board with 2.4G WiFi Micro Dual-Core 264KB ARM Microcomputers High-Performance Cortex-M0 Processor\\nBody (HTML): <p><span>The Raspberry Pi Pico is a microcontroller board based on the Raspberry Pi RP2040 microcontroller chip. It has been designed to be a low-cost, high-performance microcontroller board with flexible digital interfaces. The Raspberry Pi Pico features two ARM Cortex-M0+ cores run up to 133MHz; 256KB RAM; 30 GPIO pins; and a broad range of interfacing options. This is paired with 2MB of onboard QSPI Flash memory for code and data storage.</span><span></span></p>\\n<p><span>In addition to powerful hardware resources, Pico has rich and complete software support and community resources. It comes with a complete Rasberry Pi official C/C++ SDK, Micropython SDK. Just click \\\"https://pico.raspberrypi.org/getting-started\\\" to get started with Raspberry Pi Pico.</span><span></span></p>\", \"metadata\": {\"Handle\": \"rp2040-raspberry-pi-pico-w-board-with-2-4g-wifi-micro-dual-core-264kb-arm-microcomputers-high-performance-cortex-m0-processor\", \"source\": \"Data/products_export_1.csv\", \"row\": 69}, \"distance\": 0.9175229668617249}, {\"content\": \"<li><span style=\\\"font-size:14px;\\\">Power down leakage current of &lt;10uA</span></li>\\r\\n\\t<li><span style=\\\"font-size:14px;\\\">1MB Flash Memory</span></li>\\r\\n\\t<li><span style=\\\"font-size:14px;\\\">Integrated low power 32-bit CPU could be used as an application processor</span></li>\\r\\n\\t<li><span style=\\\"font-size:14px;\\\">SDIO 1.1 / 2.0, SPI, UART</span></li>\\r\\n\\t<li><span style=\\\"font-size:14px;\\\">STBC, 1\\u00d71 MIMO, 2\\u00d71 MIMO</span></li>\\r\\n\\t<li><span style=\\\"font-size:14px;\\\">A-MPDU &amp; A-MSDU aggregation &amp; 0.4ms guard interval</span></li>\\r\\n\\t<li><span style=\\\"font-size:14px;\\\">Wake up and transmit packets in &lt; 2ms</span></li>\\r\\n\\t<li><span style=\\\"font-size:14px;\\\">Standby power consumption of &lt; 1.0mW (DTIM3)</span></li>\\r\\n</ul>\\r\\n\\r\\n<h2><strong>Package Includes:</strong></h2>\\r\\n\\r\\n<ul>\\r\\n\\t<li><span style=\\\"font-size:14px;\\\">1 x ESP 01\\u00a0ESP8266\\u00a0WiFi Module</span></li>\\r\\n</ul>\", \"metadata\": {\"row\": 5967, \"source\": \"Data/products_export_1.csv\", \"Handle\": \"esp-01-esp8266-wifi-module-in-pakistan\"}, \"distance\": 0.9206638336181641}, {\"content\": \"Title: Arduino Mkr1000 Wifi Board Module\\nBody (HTML): <p><span style=\\\"font-size:14px;\\\"><strong>Arduino WiFi Board MKR1000</strong>\\u00a0is a powerful <a href=\\\"https://hallroad.org/esp8285-esp-01m-wifi-module-in-pakistan.html\\\" target=\\\"_blank\\\">board </a>that combines the functionality of the Zero and the Wi-Fi Shield. It is the ideal solution for makers wanting to design IoT projects with minimal previous experience in networking.</span></p>\\r\\n\\r\\n<div>\\r\\n<p><span style=\\\"font-size:14px;\\\"><strong>Arduino MKR1000 </strong>has been designed to offer a practical and cost-effective solution for makers seeking to add Wi-Fi connectivity to their projects with minimal previous experience in networking. This <strong>WiFi board\\u00a0</strong>is based on the Atmel ATSAMW25 SoC (System on Chip), that is part of the SmartConnect family of Atmel Wireless devices, specifically designed for IoT projects and devices.</span></p>\", \"metadata\": {\"Handle\": \"arduino-mkr1000-wifi-board-module-in-pakistan\", \"row\": 3688, \"source\": \"Data/products_export_2.csv\"}, \"distance\": 0.9225766062736511}, {\"content\": \"Title: Compatible Wroom Esp32 Wifi Based Microcontroller Development Board Nodemcu CH9102X\\nBody (HTML): <p data-sourcepos=\\\"3:1-3:68\\\"><strong>Wroom ESP32 WiFi-Based Microcontroller Development Board Nodemcu</strong></p>\\n<p data-sourcepos=\\\"5:1-5:27\\\">Introducing the Wroom ESP32, a powerful and versatile microcontroller development board that leverages the capabilities of the ESP32 Wi-Fi chip. This board is ideal for IoT projects, home automation, and other applications requiring wireless connectivity.</p>\\n<p data-sourcepos=\\\"7:1-7:17\\\"><strong>Key Features:</strong></p>\\n<ul data-sourcepos=\\\"9:1-10:1\\\">\\n<li data-sourcepos=\\\"9:1-9:86\\\">\\n<strong>ESP32 Wi-Fi Chip:</strong> Provides reliable and high-performance wireless communication.</li>\\n<li data-sourcepos=\\\"10:1-10:1\\\">\\n<strong>Microcontroller:</strong> Offers powerful processing capabilities for complex applications.</li>\\n<li data-sourcepos=\\\"11:1-11:93\\\">\", \"metadata\": {\"row\": 5931, \"source\": \"Data/products_export_1.csv\", \"Handle\": \"esp32-nodemcu\"}, \"distance\": 0.9314996004104614}]",
    "tool_call_id": "call_PjRZBMxYOYCiU0KgEIl4BGZV"
  },
  {
    "role": "user",
    "content": "recommend some microcontroller with wifi capabilities to use in such projects",
    "name": "Customer"
  },
  {
    "role": "assistant",
    "content": "Here are some microcontrollers with WiFi capabilities that are suitable for IoT and other wireless connectivity projects:\n\n1. Raspberry Pi Pico W\n   - RP2040 microcontroller chip by Raspberry Pi\n   - Dual-core ARM Cortex M0+ processor, up to 133 MHz\n   - 264kB SRAM, 2MB onboard Flash memory\n   - Infineon CYW43439 wireless chip supporting IEEE 802.11n and Bluetooth 5.2\n   - USB 1.1 Host and Device support\n   - 26 multi-function GPIO pins\n   - Low-power sleep and dormant modes\n\n2. ESP32-C3 Mini Development Board\n   - Low-power RISC-V 32-bit single-core processor, up to 160MHz\n   - Supports 2.4GHz Wi-Fi (802.11 b/g/n) and Bluetooth 5 (LE)\n   - 400KB SRAM, 384KB ROM, 4MB onboard Flash memory\n   - Onboard ceramic antenna\n   - Castellated module for direct soldering to carrier boards\n\n3. Arduino UNO R4 WiFi\n   - Hosts an ESP32-S3 module\n   - Extra on-board peripherals like 12-bit DAC, CAN BUS, OP AMP\n   - Extended 24 V tolerance\n   - Built-in HID support for USB communication\n   - Wi-Fi and Bluetooth connectivity\n   - Compatible with Arduino IoT Cloud\n\n4. Arduino MKR1000 WiFi Board Module\n   - Based on Atmel ATSAMW25 SoC\n   - Combines Zero board and Wi-Fi Shield functionality\n   - Practical and cost-effective for IoT projects with wifi connectivity\n\n5. ESP32 NodeMCU Development Board\n   - Based on ESP32 Wi-Fi chip\n   - Powerful, versatile for IoT and home automation\n   - Reliable high-performance wireless communication\n\n6. ESP-01 ESP8266 WiFi Module\n   - Low power consumption\n   - 1MB Flash memory\n   - Integrated 32-bit CPU\n   - Supports SDIO, SPI, UART\n   - Fast wake-up and transmit\n\nIf you need detailed specs or purchase options for any specific model, let me know!"
  },
  {
    "role": "user",
    "content": "what other basic skills needed to complete these project other than prgramming",
    "name": "Customer"
  },
  {
    "role": "assistant",
    "content": "To successfully complete projects involving microcontrollers with WiFi capabilities, in addition to programming, the following basic skills are important:\n\n1. Electronics Knowledge:\n   - Understanding of basic electronic components like resistors, capacitors, transistors, and diodes.\n   - Knowledge of reading circuit diagrams and schematics.\n   - Ability to use a breadboard for prototyping circuits.\n\n2. Circuit Design and Wiring:\n   - Skills in connecting components correctly to avoid short circuits or damage.\n   - Familiarity with soldering for making permanent connections on PCBs.\n   - Knowledge of power supply requirements and voltage regulation.\n\n3. Networking Basics:\n   - Understanding of WiFi standards and protocols.\n   - Basic knowledge of IP addressing, DHCP, and networking concepts.\n   - Ability to configure and troubleshoot wireless connections.\n\n4. Sensor and Actuator Integration:\n   - Experience working with various sensors (temperature, humidity, motion, etc.) and actuators (motors, LEDs, relays).\n   - Understanding sensor specifications and interfacing methods (analog, digital, I2C, SPI).\n\n5. Debugging and Testing:\n   - Using tools like multimeters, oscilloscopes, and logic analyzers.\n   - Troubleshooting hardware and software issues methodically.\n\n6. Software Tools:\n   - Familiarity with Integrated Development Environments (IDEs) like Arduino IDE, PlatformIO, or Raspberry Pi tools.\n   - Ability to use serial monitors and debugging tools.\n\n7. Project Planning and Documentation:\n   - Planning the project stages and components.\n   - Documenting code, circuit designs, and configurations for future reference.\n\n8. Safety Precautions:\n   - Awareness of electrical safety to prevent injury or damage.\n   - Proper handling of components and tools.\n\nHaving a combination of these skills will greatly help in building robust and functional IoT projects with WiFi-enabled microcontrollers. If you need resources or guidance on any of these skills, feel free to ask!"
  },
  {
    "role": "assistant",
    "tool_calls": [
    {
      "id": "call_wMr7je1Umoor8mfGbwwIvTgA",
      "type": "function",
      "function":
      {
        "name": "get_product_via_handle",
        "arguments": "{\"handle\": \"raspberry-pi-pico-w\"}"
      }
    },
    {
      "id": "call_MkQZoNHJ6Eyu7UCGRPfVc3gr",
      "type": "function",
      "function":
      {
        "name": "get_product_via_handle",
        "arguments": "{\"handle\": \"esp32-c3-mini-development-board-with-2-4ghz-wi-fi-bluetooth-5-in-pakistan\"}"
      }
    },
    {
      "id": "call_8rxU2VJ5HtBtdEhFzBvozQBn",
      "type": "function",
      "function":
      {
        "name": "get_product_via_handle",
        "arguments": "{\"handle\": \"arduino-uno-r4-wifi-in-pakistan\"}"
      }
    },
    {
      "id": "call_nASzSy2w1B0ORyjxFpybRMpE",
      "type": "function",
      "function":
      {
        "name": "get_product_via_handle",
        "arguments": "{\"handle\": \"arduino-mkr1000-wifi-board-module-in-pakistan\"}"
      }
    },
    {
      "id": "call_Ecd82duOAeL53mjEvmS5a8nQ",
      "type": "function",
      "function":
      {
        "name": "get_product_via_handle",
        "arguments": "{\"handle\": \"esp32-nodemcu\"}"
      }
    },
    {
      "id": "call_IjawDtCm0rtqbvQ3QjPGApFK",
      "type": "function",
      "function":
      {
        "name": "get_product_via_handle",
        "arguments": "{\"handle\": \"esp-01-esp8266-wifi-module-in-pakistan\"}"
      }
    }]
  },
  {
    "role": "tool",
    "content": "{'id': 'gid://shopify/Product/8190703927574', 'title': 'Raspberry Pi Pico w', 'handle': 'raspberry-pi-pico-w', 'description': \"Following the hugely popular Raspberry Pi Pico, the new Raspberry Pi Pico W is a wireless-enabled version of the RP2040-based board, adding 2.4GHz 802.11n WiFi connectivity! The addition of wireless connectivity opens up the Pico W to a vast new range of projects such as remote sensor readings, remote control, home automation, mini web servers, wireless GPIO pin control and much, much more! At the heart of the Pico W is the RP2040 \u2013 the same chip used in the original Raspberry Pi Pico, featuring two ARM Cortex-M0+ cores clocked at 133MHz; 256KB RAM; 30 GPIO pins; and a broad range of interfacing options. This is paired with 2MB of onboard QSPI Flash memory for code and data storage. WiFi is enabled via the use of an Infineon CYW43439 wireless chip. The CYW43439 supports IEEE 802.11 b/g/n wireless LAN, and Bluetooth 5.2; however only wireless LAN is software-supported at launch. With the same footprint and same RP2040 chip, this WiFi Pico can be used as a drop-in replacement for your existing Raspberry Pi Pico projects, upgrading them with WiFi. Just grab a Micro-USB cable (or our handy Pico Essential Kit with a USB cable, headers and more!), install the latest MicroPython Pico W specific U2F file and start programming! The Pico W can be quickly and easily programmed using MicroPython and C/C++* using popular editors such as Thonny. Learning how to use the Pico and MicroPython is also very easy thanks to the dedicated Getting Started projects and guide. There's also a guide for connecting to the internet with the Raspberry Pi Pico W. A Raspberry Pi Pico WH version, with a 40-way header pre-soldered, will also be available, however not at the initial launch (estimated availability August/September 2022). *Initially, Wi-Fi connectivity will be supported by MicroPython only. C/C++ support is on the way (timescales not yet known). Raspberry Pi Pico W Specifications The main chip on board is the RP2040 made by Raspberry Pi (their first in-house microcontroller chip!) and is a dual-core ARM Cortex M0+ processor, with a flexible clock running up to 133MHz. WiFi is enabled via the use of an Infineon CYW43439. RP2040 microcontroller chip designed by Raspberry Pi in the United Kingdom Dual-core ARM Cortex M0+ processor, flexible clock running up to 133 MHz 264kB of SRAM, and 2MB of onboard Flash memory Infineon CYW43439 wireless chip IEEE 802.11n wireless LAN Bluetooth 5.2 (not software supported at launch) WPA3 SoftAP (up to 4 clients) Onboard antenna licenced from ABRACON (connected via SPI to the RP2040) Castellated module allows soldering directly to carrier boards USB 1.1 Host and Device support Low-power sleep and dormant modes Drag & drop programming using mass storage over USB 26 multi-function GPIO pins 2\u00d7SPI, 2\u00d7I2C, 2\u00d7UART, 3\u00d712-bit ADC, 16\u00d7controllable PWM channels Real-time clock (RTC) Temperature sensor Accelerated floating-point libraries on-chip 8\u00d7Programmable IO (PIO) state machines for custom peripheral support Dimensions (WxLxH) Pico W: 21mm x 51.3mm x 3.9mm Pico WH: 21mm x 51.3mm x 12.9mm Weight Pico W: 4g Pico WH: 6g Country of origin Pico W: Japan Pico WH: Great Britain Product number: Pico W: SC0918 Pico WH: SC0919 Raspberry Pi Pico W Accessories We have a great range of Raspberry Pi Pico accessories and add-ons available in our Pico section! You can also read about our favourite Pico add-ons and accessories here! Raspberry Pi Pico W Resources Getting Started with Raspberry Pi Pico Raspberry Pi Pico W Pinout Connecting to the internet with the Raspberry Pi Pico W MicroPython UF2 image with networking support Raspberry Pi Pico W Datasheet Raspberry Pi Pico W Product Brief Raspberry Pi Pico W STEP 3D Model Raspberry Pi Pico W Fritzing part Raspberry Pi Pico W Design Files Infineon CYW43439 datasheet Thonny Python IDE Raspberry Pi Pico W Pinout A few RP2040 GPIO pins are used for internal board functions: GPIO29 OP/IP wireless SPI CLK/ADC mode (ADC3) to measure VSYS/3 GPIO25 OP wireless SPI CS - when high also enables GPIO29 ADC pin to read VSYS GPIO24 OP/IP wireless SPI data/IRQ GPIO23 OP wireless power on signal WL_GPIO2 IP VBUS sense - high if VBUS is present, else low WL_GPIO1 OP controls the on-board SMPS power save pin (Section 3.4) WL_GPIO0 OP connected to user LED Apart from GPIO and ground pins, there are seven other pins on the main 40-pin interface: PIN40 VBUS PIN39 VSYS PIN37 3V3_EN PIN36 3V3 PIN35 ADC_VREF PIN33 AGND PIN30 RUN Raspberry Pi Pico W FAQs What differences are there between the original Raspberry Pi Pico and the new Pico W? The main changes are: The Pico W includes the wireless Infineon CYW43439 wireless chip The Pico W has a different component layout, including debug pins moved to the middle of the board The onboard LED, Power Supply Mode Select and VBUS Detect pins are now controlled via the wireless LAN chip What else do I need to use a Raspberry Pi Pico? You'll need a micro-USB cable to allow you to connect it to your computer or Raspberry Pi for programming You may want to purchase a header set to allow you to use the Pico W with a breadboard, or select the Pico WH version instead (soldering your own headers allows you to choose the format or colour) There's also the excellent Get Started with MircoPython on Raspberry Pi Pico book for learning how to use the Pico What can I use the new Wi-Fi connectivity for? Any project that uses input to a GPIO pin to trigger an action in your code can be performed remotely via a WiFi connection, opening up the Pico to thousands upon thousands of new project possibilities! This can be via a small web server running on the Pico W itself, which is covered in the Connecting to the internet with Raspberry Pi Pico W PDF. There will be many more projects and uses as the Pico W makes its way out to the creative community, and no doubt many IoT services will adopt the Pico W too. The Raspberry Pi forum Pico section is a great place to watch for new projects and ideas! What WiFi frequency does the Raspberry Pi Pico W support? The Pico W runs on 2.4GHz networks. The Pico W doesn\u2019t work (or works slowly) on my WiFi network, why? Whilst we\u2019re still learning about the new Pico W, many similar boards sometimes struggle with mesh networks or advanced networks that automatically switch between the 5GHz and 2.4GHz frequencies. Try restricting your network to 2.4GHz only (see your router datasheet/manual for instructions). Your 2.4GHz network may also be on a 'busy' local band with many other routers in your area, try analysing your local band traffic and switching bands (and/or set a static band and turn off auto band switching). How does the onboard LED work on the Raspberry Pi Pico W? Unlike the original Pico W, the onboard LED on Pico W is not connected to GP25 on the RP2040, but instead to a GPIO pin on the wireless chip. MicroPython has been modified accordingly and official Raspberry Pi documentation will detail how to use the onboard LED on the Pico W. Do I need a different MicroPython UF2 for the Pico W? Yes! You\u2019ll now find two versions of the UF2 file on Raspberry Pi\u2019s website, one for the original Pico/Pico H, and another for the Pico W/WH Does the Raspberry Pi Pico W use more power than the original? We expect so, but no official information has been released on this yet. Watch this space! I need help using the Pico W, where can I go? If you need help with your Pico W project or using the new WiFi functionality, the datasheet and other official Raspberry Pi documentation are a great place to start. If you can\u2019t find what you need in the official documentation, search for your question on the Raspberry Pi forum or create a new post if you can\u2019t find what you need.\", 'descriptionHtml': '<p><span style=\"font-size:14px;\"></span></p>\\r\\n\\r\\n<p>Following the hugely popular\\xa0<a href=\"https://thepihut.com/products/raspberry-pi-pico\" title=\"Raspberry pi pico | the pi hut\" aria-label=\"Visit a webpage about Raspberry pi pico | the pi hut\">Raspberry Pi Pico</a>, the new Raspberry Pi Pico W is a wireless-enabled version of the RP2040-based board, adding\\xa0<strong>2.4GHz 802.11n WiFi</strong>\\xa0connectivity!</p>\\r\\n\\r\\n<p>The addition of wireless connectivity opens up the Pico W to a vast new range of projects such as remote sensor readings, remote control, home automation, mini web servers, wireless GPIO pin control and much, much more!</p>\\r\\n\\r\\n<p>At the heart of the Pico W is the RP2040 \u2013 the same chip used in the original Raspberry Pi Pico, featuring two ARM Cortex-M0+ cores clocked at 133MHz; 256KB RAM; 30 GPIO pins; and a broad range of interfacing options. This is paired with 2MB of onboard QSPI Flash memory for code and data storage.</p>\\r\\n\\r\\n<p>WiFi is enabled via the use of an Infineon CYW43439 wireless chip. The CYW43439 supports IEEE 802.11 b/g/n wireless LAN, and Bluetooth 5.2; however only wireless LAN is software-supported at launch.</p>\\r\\n\\r\\n<p><a href=\"https://cdn.shopify.com/s/files/1/0176/3274/files/Raspberry-Pi-Pico-W-Sideways_1.jpg?v=1656506201\" target=\"_blank\" rel=\"noopener noreferrer\"><img alt=\"Raspberry Pi Pico w\" src=\"https://digilog.pk/cdn/shop/files/Raspberry-Pi-Pico-W-Sideways_1.webp\" data-original=\"https://cdn.shopify.com/s/files/1/0744/0764/1366/files/Raspberry-Pi-Pico-W-Sideways_1.jpg?v=1702696853\" loading=\"lazy\" data-files=\"Raspberry-Pi-Pico-W-Sideways_1.webp\"></a></p>\\r\\n\\r\\n<p>With the same footprint and same RP2040 chip, this WiFi Pico can be used as a drop-in replacement for your existing Raspberry Pi Pico projects, upgrading them with WiFi. Just grab a\\xa0<a href=\"https://thepihut.com/products/usb-to-micro-usb-cable-0-5m\" title=\"Usb-a to micro-usb cable | the pi hut\" aria-label=\"Visit a webpage about Usb-a to micro-usb cable | the pi hut\">Micro-USB cable</a>\\xa0(or our handy\\xa0<a href=\"https://thepihut.com/products/essential-raspberry-pi-pico-kit\" title=\"Essential raspberry pi pico kit | the pi hut\" aria-label=\"Visit a webpage about Essential raspberry pi pico kit | the pi hut\">Pico Essential Kit</a>\\xa0with a USB cable, headers and more!), install the latest\\xa0<a href=\"https://www.raspberrypi.com/documentation/microcontrollers/micropython.html\" title=\"Raspberry pi documentation - micropython\" aria-label=\"Visit a webpage about Raspberry pi documentation - micropython\">MicroPython Pico W specific U2F file</a>\\xa0and start programming!</p>\\r\\n\\r\\n<p>The Pico W can be quickly and easily programmed using MicroPython and C/C++* using popular editors such as\\xa0<a href=\"https://thonny.org/\" title=\"Thonny, python ide for beginners\" aria-label=\"Visit a webpage about Thonny, python ide for beginners\">Thonny</a>. Learning how to use the Pico and MicroPython is also very easy thanks to the dedicated\\xa0<a href=\"https://projects.raspberrypi.org/en/projects/getting-started-with-the-pico\" title=\"Getting started projects\" aria-label=\"Visit a webpage about Getting started projects\">Getting Started projects</a>\\xa0and\\xa0<a href=\"https://datasheets.raspberrypi.com/pico/getting-started-with-pico.pdf\" title=\"Guide\" aria-label=\"Visit a webpage about Guide\">guide</a>. There\\'s also a guide for\\xa0<a href=\"https://datasheets.raspberrypi.com/picow/connecting-to-the-internet-with-pico-w.pdf\" title=\"Connecting to the internet with the raspberry pi pico w\" aria-label=\"Visit a webpage about Connecting to the internet with the raspberry pi pico w\">connecting to the internet with the Raspberry Pi Pico W</a>.</p>\\r\\n\\r\\n<p>A Raspberry Pi Pico WH version, with a 40-way header pre-soldered, will also be available, however not at the initial launch (estimated availability August/September 2022).</p>\\r\\n\\r\\n<p><em>*Initially, Wi-Fi connectivity will be supported by MicroPython only. C/C++ support is on the way (timescales not yet known).</em></p>\\r\\n\\r\\n<p>\\xa0</p>\\r\\n\\r\\n<p><em><iframe allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"\" frameborder=\"0\" height=\"315\" src=\"https://www.youtube.com/embed/QIdyTlmdVW8\" title=\"YouTube video player\" width=\"560\"></iframe></em></p>\\r\\n\\r\\n<h2>Raspberry Pi Pico W Specifications</h2>\\r\\n\\r\\n<p>The main chip on board is the RP2040 made by Raspberry Pi (their first in-house microcontroller chip!) and is a dual-core ARM Cortex M0+ processor, with a flexible clock running up to 133MHz. WiFi is enabled via the use of an Infineon CYW43439.</p>\\r\\n\\r\\n<ul>\\r\\n\\t<li>RP2040 microcontroller chip designed by Raspberry Pi in the United Kingdom</li>\\r\\n\\t<li>Dual-core ARM Cortex M0+ processor, flexible clock running up to 133 MHz</li>\\r\\n\\t<li>264kB of SRAM, and 2MB of onboard Flash memory</li>\\r\\n\\t<li>\\n<a href=\"https://www.infineon.com/part/CYW43439?redirId=216343\" title=\"Cyw43439 - infineon technologies\" aria-label=\"Visit a webpage about Cyw43439 - infineon technologies\">Infineon CYW43439</a>\\xa0wireless chip\\r\\n\\t<ul>\\r\\n\\t\\t<li>IEEE 802.11n wireless LAN</li>\\r\\n\\t\\t<li>Bluetooth 5.2 (not software supported at launch)</li>\\r\\n\\t\\t<li>WPA3</li>\\r\\n\\t\\t<li>SoftAP (up to 4 clients)</li>\\r\\n\\t\\t<li>Onboard antenna licenced from ABRACON (connected via SPI to the RP2040)</li>\\r\\n\\t</ul>\\r\\n\\t</li>\\r\\n\\t<li>Castellated module allows soldering directly to carrier boards</li>\\r\\n\\t<li>USB 1.1 Host and Device support</li>\\r\\n\\t<li>Low-power sleep and dormant modes</li>\\r\\n\\t<li>Drag &amp; drop programming using mass storage over USB</li>\\r\\n\\t<li>26 multi-function GPIO pins</li>\\r\\n\\t<li>2\u00d7SPI, 2\u00d7I2C, 2\u00d7UART, 3\u00d712-bit ADC, 16\u00d7controllable PWM channels</li>\\r\\n\\t<li>Real-time clock (RTC)</li>\\r\\n\\t<li>Temperature sensor</li>\\r\\n\\t<li>Accelerated floating-point libraries on-chip</li>\\r\\n\\t<li>8\u00d7Programmable IO (PIO) state machines for custom peripheral support</li>\\r\\n\\t<li>Dimensions (WxLxH)\\r\\n\\t<ul>\\r\\n\\t\\t<li>Pico W: 21mm x 51.3mm x 3.9mm</li>\\r\\n\\t\\t<li>Pico WH: 21mm x 51.3mm x 12.9mm</li>\\r\\n\\t</ul>\\r\\n\\t</li>\\r\\n\\t<li>Weight\\r\\n\\t<ul>\\r\\n\\t\\t<li>Pico W: 4g</li>\\r\\n\\t\\t<li>Pico WH: 6g</li>\\r\\n\\t</ul>\\r\\n\\t</li>\\r\\n\\t<li>Country of origin\\r\\n\\t<ul>\\r\\n\\t\\t<li>Pico W: Japan</li>\\r\\n\\t\\t<li>Pico WH: Great Britain</li>\\r\\n\\t</ul>\\r\\n\\t</li>\\r\\n\\t<li>Product number:\\r\\n\\t<ul>\\r\\n\\t\\t<li>Pico W: SC0918</li>\\r\\n\\t\\t<li>Pico WH: SC0919</li>\\r\\n\\t</ul>\\r\\n\\t</li>\\r\\n</ul>\\r\\n\\r\\n<h2>Raspberry Pi Pico W Accessories</h2>\\r\\n\\r\\n<p>We have a\\xa0<a href=\"https://thepihut.com/collections/pico\" title=\"Raspberry pi pico accessories &amp; add ons | the pi hut\" aria-label=\"Visit a webpage about Raspberry pi pico accessories &amp; add ons | the pi hut\">great range of Raspberry Pi Pico accessories and add-ons available in our Pico section</a>! You can also\\xa0<a href=\"https://thepihut.com/blogs/raspberry-pi-roundup/top-10-raspberry-pi-pico-add-ons-accessories\" title=\"Top 10 raspberry pi pico add-ons &amp; accessories | the pi hut\" aria-label=\"Visit a webpage about Top 10 raspberry pi pico add-ons &amp; accessories | the pi hut\">read about our favourite Pico add-ons and accessories here</a>!</p>\\r\\n\\r\\n<h2>Raspberry Pi Pico W Resources</h2>\\r\\n\\r\\n<ul>\\r\\n\\t<li><a href=\"https://datasheets.raspberrypi.com/pico/getting-started-with-pico.pdf\" title=\"Getting started with raspberry pi pico\" aria-label=\"Visit a webpage about Getting started with raspberry pi pico\">Getting Started with Raspberry Pi Pico</a></li>\\r\\n\\t<li><a href=\"https://datasheets.raspberrypi.com/picow/PicoW-A4-Pinout.pdf\" title=\"Raspberry pi pico w pinout\" aria-label=\"Visit a webpage about Raspberry pi pico w pinout\">Raspberry Pi Pico W Pinout</a></li>\\r\\n\\t<li><a href=\"https://datasheets.raspberrypi.com/picow/connecting-to-the-internet-with-pico-w.pdf\" title=\"Connecting to the internet with the raspberry pi pico w\" aria-label=\"Visit a webpage about Connecting to the internet with the raspberry pi pico w\">Connecting to the internet with the Raspberry Pi Pico W</a></li>\\r\\n\\t<li><a href=\"https://www.raspberrypi.com/documentation/microcontrollers/micropython.html\" title=\"Raspberry pi documentation - micropython\" aria-label=\"Visit a webpage about Raspberry pi documentation - micropython\">MicroPython UF2 image with networking support</a></li>\\r\\n\\t<li><a href=\"https://datasheets.raspberrypi.com/picow/pico-w-datasheet.pdf\" title=\"Raspberry pi pico w datasheet\" aria-label=\"Visit a webpage about Raspberry pi pico w datasheet\">Raspberry Pi Pico W Datasheet</a></li>\\r\\n\\t<li><a href=\"https://datasheets.raspberrypi.com/picow/pico-w-product-brief.pdf\" title=\"Raspberry pi pico w product brief\" aria-label=\"Visit a webpage about Raspberry pi pico w product brief\">Raspberry Pi Pico W Product Brief</a></li>\\r\\n\\t<li><a href=\"https://datasheets.raspberrypi.com/picow/PicoW-step.zip\" title=\"Raspberry pi pico w step 3d model\" aria-label=\"Visit a webpage about Raspberry pi pico w step 3d model\">Raspberry Pi Pico W STEP 3D Model</a></li>\\r\\n\\t<li><a href=\"https://datasheets.raspberrypi.com/picow/PicoW-Fritzing.fzpz\" title=\"Raspberry pi pico w fritzing part\" aria-label=\"Visit a webpage about Raspberry pi pico w fritzing part\">Raspberry Pi Pico W Fritzing part</a></li>\\r\\n\\t<li><a href=\"https://datasheets.raspberrypi.com/picow/RPi-PicoW-PUBLIC-20220607.zip\" title=\"Raspberry pi pico w design files\" aria-label=\"Visit a webpage about Raspberry pi pico w design files\">Raspberry Pi Pico W Design Files</a></li>\\r\\n\\t<li><a href=\"https://www.infineon.com/dgdl/Infineon-CYW43439KUBGT-DataSheet-v03_00-EN.pdf?fileId=8ac78c8c7ddc01d7017ddd033d78594d\">Infineon CYW43439 datasheet</a></li>\\r\\n\\t<li><a href=\"https://thonny.org/\" title=\"Thonny, python ide for beginners\" aria-label=\"Visit a webpage about Thonny, python ide for beginners\">Thonny Python IDE</a></li>\\r\\n</ul>\\r\\n\\r\\n<h2>Raspberry Pi Pico W Pinout</h2>\\r\\n\\r\\n<p><a href=\"https://cdn.shopify.com/s/files/1/0176/3274/files/Raspberry-Pi-Pico-W-Pinout_1.jpg?v=1656507461\" target=\"_blank\" rel=\"noopener noreferrer\"><img alt=\"Raspberry Pi Pico w\" src=\"https://digilog.pk/cdn/shop/files/Raspberry-Pi-Pico-W-Pinout_1.webp\" data-original=\"https://cdn.shopify.com/s/files/1/0176/3274/files/Raspberry-Pi-Pico-W-Pinout_1.jpg?v=1656507461\" loading=\"lazy\" data-files=\"Raspberry-Pi-Pico-W-Pinout_1.webp\"></a></p>\\r\\n\\r\\n<p>A few RP2040 GPIO pins are used for internal board functions:</p>\\r\\n\\r\\n<ul>\\r\\n\\t<li>GPIO29 OP/IP wireless SPI CLK/ADC mode (ADC3) to measure VSYS/3</li>\\r\\n\\t<li>GPIO25 OP wireless SPI CS - when high also enables GPIO29 ADC pin to read VSYS</li>\\r\\n\\t<li>GPIO24 OP/IP wireless SPI data/IRQ</li>\\r\\n\\t<li>GPIO23 OP wireless power on signal</li>\\r\\n\\t<li>WL_GPIO2 IP VBUS sense - high if VBUS is present, else low</li>\\r\\n\\t<li>WL_GPIO1 OP controls the on-board SMPS power save pin (Section 3.4)</li>\\r\\n\\t<li>WL_GPIO0 OP connected to user LED</li>\\r\\n</ul>\\r\\n\\r\\n<p>Apart from GPIO and ground pins, there are seven other pins on the main 40-pin interface:</p>\\r\\n\\r\\n<ul>\\r\\n\\t<li>PIN40 VBUS</li>\\r\\n\\t<li>PIN39 VSYS</li>\\r\\n\\t<li>PIN37 3V3_EN</li>\\r\\n\\t<li>PIN36 3V3</li>\\r\\n\\t<li>PIN35 ADC_VREF</li>\\r\\n\\t<li>PIN33 AGND</li>\\r\\n\\t<li>PIN30 RUN</li>\\r\\n</ul>\\r\\n\\r\\n<h2>Raspberry Pi Pico W FAQs</h2>\\r\\n\\r\\n<p><strong>What differences are there between the original Raspberry Pi Pico and the new Pico W?</strong></p>\\r\\n\\r\\n<p>The main changes are:</p>\\r\\n\\r\\n<ul>\\r\\n\\t<li>The Pico W includes\\xa0the wireless Infineon\\xa0CYW43439\\xa0wireless chip</li>\\r\\n\\t<li>The Pico W has a different component layout, including debug pins moved to the middle of the board</li>\\r\\n\\t<li>The onboard LED, Power Supply Mode Select and VBUS Detect pins are now controlled via the wireless LAN chip</li>\\r\\n</ul>\\r\\n\\r\\n<p><strong>What else do I need to use a Raspberry Pi Pico?</strong></p>\\r\\n\\r\\n<ul>\\r\\n\\t<li>You\\'ll need a\\xa0<a href=\"https://thepihut.com/products/raspberry-pi-micro-usb-cable\" title=\"Official raspberry pi micro-usb cable | the pi hut\" aria-label=\"Visit a webpage about Official raspberry pi micro-usb cable | the pi hut\">micro-USB cable</a>\\xa0to allow you to connect it to your computer or Raspberry Pi for programming</li>\\r\\n\\t<li>You may want to purchase a\\xa0<a href=\"https://thepihut.com/products/male-headers-for-raspberry-pi-pico\" title=\"Male header set for raspberry pi pico | the pi hut\" aria-label=\"Visit a webpage about Male header set for raspberry pi pico | the pi hut\">header set</a>\\xa0to allow you to use the Pico W with a breadboard, or select the Pico WH version instead\\xa0<em>(soldering your own headers allows you to choose the format or colour)</em>\\n</li>\\r\\n\\t<li>There\\'s also the excellent\\xa0<a href=\"https://thepihut.com/products/get-started-with-micropython-on-raspberry-pi-pico\" title=\"Get started with micropython on raspberry pi pico | the pi hut\" aria-label=\"Visit a webpage about Get started with micropython on raspberry pi pico | the pi hut\">Get Started with MircoPython on Raspberry Pi Pico book</a>\\xa0for learning how to use the Pico</li>\\r\\n</ul>\\r\\n\\r\\n<p><strong>What can I use the new Wi-Fi connectivity for?</strong></p>\\r\\n\\r\\n<p>Any project that uses input to a GPIO pin to trigger an action in your code can be performed remotely via a WiFi connection, opening up the Pico to thousands upon thousands of new project possibilities!</p>\\r\\n\\r\\n<p>This can be via a small web server running on the Pico W itself, which is covered in the Connecting to the internet with Raspberry Pi Pico W PDF. There will be many more projects and uses as the Pico W makes its way out to the creative community, and no doubt many IoT services will adopt the Pico W too. The\\xa0<a href=\"https://forums.raspberrypi.com/viewforum.php?f=143\" title=\"Raspberry pi pico - raspberry pi forums\" aria-label=\"Visit a webpage about Raspberry pi pico - raspberry pi forums\">Raspberry Pi forum Pico section</a>\\xa0is a great place to watch for new projects and ideas!</p>\\r\\n\\r\\n<p><strong>What WiFi frequency does the Raspberry Pi Pico W support?</strong></p>\\r\\n\\r\\n<p>The Pico W runs on 2.4GHz networks.</p>\\r\\n\\r\\n<p><strong>The Pico W doesn\u2019t work (or works slowly) on my WiFi network, why?</strong></p>\\r\\n\\r\\n<p>Whilst we\u2019re still learning about the new Pico W, many similar boards sometimes struggle with mesh networks or advanced networks that automatically switch between the 5GHz and 2.4GHz frequencies. Try restricting your network to 2.4GHz only (see your router datasheet/manual for instructions). Your 2.4GHz network may also be on a \\'busy\\' local band with many other routers in your area, try analysing your local band traffic and switching bands (and/or set a static band and turn off auto band switching).</p>\\r\\n\\r\\n<p><strong>How does the onboard LED work on the Raspberry Pi Pico W?</strong></p>\\r\\n\\r\\n<p>Unlike the original Pico W, the onboard LED on Pico W is not connected to GP25 on the RP2040, but instead to a GPIO pin on the wireless chip. MicroPython has been modified accordingly and official Raspberry Pi documentation will detail how to use the onboard LED on the Pico W.</p>\\r\\n\\r\\n<p><strong>Do I need a different MicroPython UF2 for the Pico W?</strong></p>\\r\\n\\r\\n<p>Yes! You\u2019ll now find two versions of the UF2 file on Raspberry Pi\u2019s website, one for the original Pico/Pico H, and another for the Pico W/WH</p>\\r\\n\\r\\n<p><strong>Does the Raspberry Pi Pico W use more power than the original?</strong></p>\\r\\n\\r\\n<p>We expect so, but no official information has been released on this yet. Watch this space!</p>\\r\\n\\r\\n<p><strong>I need help using the Pico W, where can I go?</strong></p>\\r\\n\\r\\n<p>If you need help with your Pico W project or using the new WiFi functionality, the datasheet and other official Raspberry Pi documentation are a great place to start. If you can\u2019t find what you need in the official documentation, search for your question on the\\xa0<a href=\"https://forums.raspberrypi.com/\" title=\"Raspberry pi forums - index page\" aria-label=\"Visit a webpage about Raspberry pi forums - index page\">Raspberry Pi forum</a>\\xa0or create a new post if you can\u2019t find what you need.</p>', 'vendor': 'Raspberry pi', 'productType': '', 'status': 'ACTIVE', 'createdAt': '2023-04-06T19:47:41Z', 'updatedAt': '2025-08-08T13:09:52Z', 'tags': ['air', 'esp32', 'inv ok', 'kh', 'pi pico', 'raspberry pi'], 'options': [{'name': 'Title', 'values': ['Default Title']}], 'priceRange': {'minVariantPrice': {'amount': '270000.0', 'currencyCode': 'PKR'}, 'maxVariantPrice': {'amount': '270000.0', 'currencyCode': 'PKR'}}, 'compareAtPriceRange': None, 'totalInventory': 9, 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/44486687555862', 'title': 'Default Title', 'sku': 'B652', 'taxable': False, 'price': '2700.00', 'compareAtPrice': None, 'inventoryQuantity': 9, 'availableForSale': True, 'barcode': '', 'createdAt': '2023-04-06T19:47:41Z', 'updatedAt': '2025-08-08T12:52:21Z', 'inventoryPolicy': 'CONTINUE', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/46586076627222', 'tracked': True, 'measurement': {'weight': {'value': 0.005, 'unit': 'KILOGRAMS'}}, 'unitCost': {'amount': '2500.0', 'currencyCode': 'PKR'}, 'countryCodeOfOrigin': None, 'harmonizedSystemCode': None, 'requiresShipping': True}, 'image': None}}]}, 'media': {'edges': [{'node': {'image': {'id': 'gid://shopify/ImageSource/38107672379670', 'altText': 'Raspberry Pi Pico w', 'url': 'https://cdn.shopify.com/s/files/1/0744/0764/1366/files/Raspberry_Pi_Pico_W_1_4807f6c2-75a5-4121-8ae9-4a90a7998461.webp?v=1723482527', 'width': 800, 'height': 800}}}]}}",
    "tool_call_id": "call_wMr7je1Umoor8mfGbwwIvTgA"
  },
  {
    "role": "tool",
    "content": "{'id': 'gid://shopify/Product/9884885647638', 'title': 'ESP32 C3 Mini Development Board with 2.4GHz Wi-Fi, Bluetooth 5 in Pakistan', 'handle': 'esp32-c3-mini-development-board-with-2-4ghz-wi-fi-bluetooth-5-in-pakistan', 'description': 'ESP32-C3-Zero (without pin header) and ESP32-C3-Zero-M (with pin header) are tiny in size with castellated holes, making them easy to integrate into other host boards. ESP32-C3-Zero comes with an onboard Type-C USB connector, which exposes most of the unused pins in a small form factor. It adopts ESP32-C3FH4 as a System-on-Chip (SoC) that integrates low-power WiFi and BLE5 with 4MB Flash. In addition, there is a hardware encryption accelerator, RNG, HMAC, and Digital Signature modules to meet the safety requirements of IoT and provide peripheral interfaces. Moreover, its low-power working mode supports most application scenarios such as IoT, mobile devices, wearable electronic devices, and smart homes. Features Low-power SoC equipped with RISC-V 32-bit single-core processor, up to 160MHz main frequency. Supports 2.4GHz Wi-Fi (802.11 b/g/n) and Bluetooth\u00ae 5 (LE). 400KB of SRAM and 384KB ROM, and 4MB of onboard Flash memory. Castellated module and onboard ceramic antenna, allow soldering direct to carrier boards. Supports flexible clock, module power supply independent setting, and other controls to realize low power consumption in different scenarios. Integrated with USB serial port full-speed controller, 15 \u00d7 GPIO pins allow flexible configuring pin functions. 3 \u00d7 SPI, 1 \u00d7 I2C, 2 \u00d7 UART, 1 \u00d7 I2S, 2 \u00d7 ADC, etc. Hardware Description When using ESP32-C3-Zero with daughterboards, please avoid covering the ceramic antenna with PCB boards, metal, or plastic components. In ESP32-C3-Zero, GPIO12 to GPIO17 pins are not exposed; these pins are used for stacking the 4MB Flash. ESP32-C3-Zero uses GPIO10 to connect with WS2812 RGB LED. Please refer to the documentation link for WS2812 specifications. ESP32-C3-Zero does not employ a USB to UART chip. When flashing firmware, press and hold the BOOT button (GPIO9) and then connect the Type-C cable. The \"TX\" and \"RX\" markings on the board indicate the default UART0 pins for ESP32-C3-Zero. Specifically, TX is GPIO21, and RX is GPIO20. Hardware Connection Press the BOOT (GPIO9) key before connecting the Type-C cable each time download the firmware. Input 3.7V~6V for the castellated hole with 5V silkscreen when connecting the external power. Dimensions ESP32-C3 Mini Development Board, Based on ESP32-C3FH4 Single-core Processor, 160MHz Running Frequency, 2.4GHz Wi-Fi & Bluetooth 5 ESP32-C3-Zero Development Board Based on ESP32-C3FH4, onboard multi-function GPIO pins Castellated Module, Suitable For SMD Applications Board specifications Low-power SoC equipped with RISC-V 32-bit single-core processor, up to 160MHz main frequency Supports 2.4GHz Wi-Fi (802.11 b/g/n) and Bluetooth\u00ae 5 (LE) 400KB of SRAM and 384KB ROM, and 4MB of onboard Flash memory Castellated module and onboard ceramic antenna, allows soldering direct to carrier boards Supports flexible clock, module power supply independent setting, and other controls to realize low power consumption in different scenarios Integrated with USB serial port full-speed controller, 15 \u00d7 GPIO pins allows flexibly configuring pin functions 3 \u00d7 SPI, 1 \u00d7 I2C, 2 \u00d7 UART, 1 \u00d7 I2S, 2 \u00d7 ADC, etc. Version Options ESP32-C3-Zerowithout pinheader ESP32-C3-Zero-Mwith pre-soldered header Support C/C++, MicroPython Comprehensive SDK, Dev Resources, Tutorials To Help You Easily Get Started What\\'s On Board USB Type-C Port BOOT buttonPress it and then press the RESET button to enter download mode RESET button WS2812 RGB LED ME6217C33M5GLow dropout regulator, 800mA output (Max.) ESP32-C3FH4 single-core processorup to 160MHz operating frequency 2.4G ceramic antenna Pin definition Product Show outline dimensions Resources & Services Wiki: www.waveshare.com/wiki/ESP32-C3-Zero Environment Setting The software framework for ESP32 series development boards is completed, and you can use CircuitPython, MicroPython, and C/C++ (Arduino, ESP-IDF) for rapid prototyping of product development. Here\\'s a brief introduction to these three development approaches: CircuitPython is a programming language designed to simplify coding tests and learning on low-cost microcontroller boards. It is an open-source derivative of the MicroPython programming language, primarily aimed at students and beginners. CircuitPython development and maintenance are supported by Adafruit Industries. You can refer to development documentation for CircuitPython-related applications development. The GitHub library for CircuitPython allows for recompilation for custom development. MicroPython is an efficient implementation of the Python 3 programming language. It includes a small subset of the Python standard library and has been optimized to run on microcontrollers and resource-constrained environments. You can refer to development documentation for MicroPython-related application development. The GitHub library for MicroPython allows for recompilation for custom development. The official libraries and support from Espressif Systems for C/C++ development make it convenient for rapid installation. For Windows 10 system: Users can select Arduino Or Visual Studio Code (ESP-IDF) as their Integrated Development Environment (IDE). Mac and Linux operating system users can refer to the official instructions. Additionally, you can find development manuals for ESP32 series Arduino and ESP-IDF development to assist you in the process. Arduino 1. Download and install Arduino IDE.2. Install ESP32 on the Arduino IDE as shown below, and you can refer to this link. Fill in the following link in the Additional Boards Manager URLs section of the Settings interface under File -> Preferences and save. https://raw.githubusercontent.com/espressif/arduino-esp32/gh-pages/package_esp32_index.json Search esp32 on Board Manager to install, and restart Arduino IDE to take effect. 3. ESP32-C3-Zero does not have USB to UART chip mounted, you need to use the USB of ESP32-C3 as the download interface and Log print interface, and you need to enable USB CDC when using Arduino IDE. MicroPython 1. Download and install the latest Thonny, open Thonny IDE -> Configure interpreter..., as shown below: 2. Press the BOOT key on the board, connect it to the USB cable, find the device manager or the corresponding COM port, and download or run the demo. For more details, you can see #Hardware Connection. 3. Select the ESP32 series online MPY firmware to download according to the following steps. The Flash content of the development board will be cleared before downloading, and the whole download process lasts about 1 minute. 4. Download the local firmware using flash_download_tool according to the following figure. You can choose either step 3 or step 4, but we recommend to choose step 4. 5. Please refer to MicroPython Documentation and Release Note to program. Sample Demo Please refer to arduino-esp32 for Arduino sample demo or File -> examples on the Arduino IDE. Please refer to MicroPython development documentation and sample demo for mpy example. Resource Document Schematic MicroPython development documentation ESP32 Arduino Core\\'s documentation arduino-esp32 ESP-IDF esp32-c3 programming guide Demo Sample demo Software Sscom serial port assistant Thonny Python IDE Arduino IDE Datasheet ESP32-C3 Datasheet WS2812B FAQ Question:Can the ESP32-C3-Zero be powered via pins? Answer: You can use 5V pins and then supply it with 5V. Question:How to burn ESP32-C3-Zero with hardware debugging, is it just plugging in the type C port and connecting it to the computer? Answer: That\\'s right. If the burn fails, press and hold the boot button to connect to the computer and then release it. Question:Does ESP32-C3-Zero support ipv6? Answer: ESP32-C3 has ipv6 sample demo, it can support ipv6.', 'descriptionHtml': '<div class=\"overviewSec\">\\n<p>ESP32-C3-Zero (without pin header) and ESP32-C3-Zero-M (with pin header) are tiny in size with castellated holes, making them easy to integrate into other host boards. ESP32-C3-Zero comes with an onboard Type-C USB connector, which exposes most of the unused pins in a small form factor. It adopts ESP32-C3FH4 as a System-on-Chip (SoC) that integrates low-power WiFi and BLE5 with 4MB Flash. In addition, there is a hardware encryption accelerator, RNG, HMAC, and Digital Signature modules to meet the safety requirements of IoT and provide peripheral interfaces. Moreover, its low-power working mode supports most application scenarios such as IoT, mobile devices, wearable electronic devices, and smart homes.</p>\\n<h2><span class=\"mw-headline\" id=\"Features\">Features</span></h2>\\n<ul>\\n<li>Low-power SoC equipped with RISC-V 32-bit single-core processor, up to 160MHz main frequency.</li>\\n<li>Supports 2.4GHz Wi-Fi (802.11 b/g/n) and Bluetooth\u00ae 5 (LE).</li>\\n<li>400KB of SRAM and 384KB ROM, and 4MB of onboard Flash memory.</li>\\n<li>Castellated module and onboard ceramic antenna, allow soldering direct to carrier boards.</li>\\n<li>Supports flexible clock, module power supply independent setting, and other controls to realize low power consumption in different scenarios.</li>\\n<li>Integrated with USB serial port full-speed controller, 15 \u00d7 GPIO pins allow flexible configuring pin functions.</li>\\n<li>3 \u00d7 SPI, 1 \u00d7 I2C, 2 \u00d7 UART, 1 \u00d7 I2S, 2 \u00d7 ADC, etc.</li>\\n</ul>\\n<h2><span class=\"mw-headline\" id=\"Hardware_Description\">Hardware Description</span></h2>\\n<ul>\\n<li>When using ESP32-C3-Zero with daughterboards, please avoid covering the ceramic antenna with PCB boards, metal, or plastic components.</li>\\n<li>In ESP32-C3-Zero, GPIO12 to GPIO17 pins are not exposed; these pins are used for stacking the 4MB Flash.</li>\\n<li>ESP32-C3-Zero uses GPIO10 to connect with WS2812 RGB LED. Please refer to<span>\\xa0</span><a rel=\"nofollow noreferrer noopener\" class=\"external text\" href=\"https://files.waveshare.com/wiki/ESP32-C3-Zero/XL-0807RGBC-WS2812B%20(1).pdf\" target=\"_blank\" title=\"The documentation link\">the documentation link</a><span>\\xa0</span>for WS2812 specifications.</li>\\n<li>ESP32-C3-Zero does not employ a USB to UART chip. When flashing firmware, press and hold the BOOT button (GPIO9) and then connect the Type-C cable.</li>\\n<li>The \"TX\" and \"RX\" markings on the board indicate the default UART0 pins for ESP32-C3-Zero. Specifically, TX is GPIO21, and RX is GPIO20.</li>\\n</ul>\\n<h3><span class=\"mw-headline\" id=\"Hardware_Connection\">Hardware Connection</span></h3>\\n<ul>\\n<li>Press the BOOT (GPIO9) key before connecting the Type-C cable each time download the firmware.</li>\\n<li>Input 3.7V~6V for the castellated hole with 5V silkscreen when connecting the external power.</li>\\n</ul>\\n<h3><span class=\"mw-headline\" id=\"Dimensions\">Dimensions</span></h3>\\n<p><a href=\"https://www.waveshare.com/wiki/File:ESP32-C3-Zero_02.jpg\" class=\"image fancybox\"><img alt=\"ESP32-C3-Zero 02.jpg\" src=\"https://www.waveshare.com/w/upload/e/e7/ESP32-C3-Zero_02.jpg\" decoding=\"async\" loading=\"lazy\" width=\"960\" height=\"528\" data-original=\"https://www.waveshare.com/w/upload/e/e7/ESP32-C3-Zero_02.jpg\"></a></p>\\n<br>ESP32-C3 Mini Development Board, Based on ESP32-C3FH4 Single-core Processor, 160MHz Running Frequency, 2.4GHz Wi-Fi &amp; Bluetooth 5</div>\\n<div class=\"richWrap\">\\n<div class=\"pdT\">\\n<div class=\"richTitle\">ESP32-C3-Zero Development Board</div>\\n<p class=\"hilitBlock2 round1234\">Based on ESP32-C3FH4, onboard multi-function GPIO pins</p>\\n<p class=\"richDesc\">Castellated Module, Suitable For SMD Applications</p>\\n<img src=\"https://www.waveshare.com/img/devkit/ESP32-C3-Zero/ESP32-C3-Zero-details-1.jpg\" data-original=\"https://www.waveshare.com/img/devkit/ESP32-C3-Zero/ESP32-C3-Zero-details-1.jpg\" alt=\"ESP32 C3 Mini Development Board with 2.4GHz Wi-Fi Bluetooth 5 in Pakistan\" loading=\"lazy\">\\n</div>\\n<div class=\"pdT\">\\n<div class=\"richTitle\">Board specifications</div>\\n<div class=\"pdTRBL2 alignl\">\\n<ul>\\n<li>Low-power SoC equipped with RISC-V 32-bit single-core processor, up to 160MHz main frequency</li>\\n<li>Supports 2.4GHz Wi-Fi (802.11 b/g/n) and Bluetooth\u00ae 5 (LE)</li>\\n<li>400KB of SRAM and 384KB ROM, and 4MB of onboard Flash memory</li>\\n<li>Castellated module and onboard ceramic antenna, allows soldering direct to carrier boards</li>\\n<li>Supports flexible clock, module power supply independent setting, and other controls to realize low power consumption in different scenarios</li>\\n<li>Integrated with USB serial port full-speed controller, 15 \u00d7 GPIO pins allows flexibly configuring pin functions</li>\\n<li>3 \u00d7 SPI, 1 \u00d7 I2C, 2 \u00d7 UART, 1 \u00d7 I2S, 2 \u00d7 ADC, etc.</li>\\n</ul>\\n</div>\\n</div>\\n<div class=\"pdT\">\\n<div class=\"richTitle\">Version Options</div>\\n<div class=\"richGridWrap richGridWrap-2c richGridWrap-valignTop mgnTB\">\\n<div>\\n<img src=\"https://www.waveshare.com/img/devkit/ESP32-C3-Zero/ESP32-C3-Zero-details-3-1.jpg\" class=\"round1234\" data-original=\"https://www.waveshare.com/img/devkit/ESP32-C3-Zero/ESP32-C3-Zero-details-3-1.jpg\" alt=\"ESP32 C3 Mini Development Board with 2.4GHz Wi-Fi Bluetooth 5 in Pakistan\" loading=\"lazy\">\\n<p><strong>ESP32-C3-Zero</strong><br>without pinheader</p>\\n</div>\\n<span>\\xa0</span>\\n<div>\\n<img src=\"https://www.waveshare.com/img/devkit/ESP32-C3-Zero/ESP32-C3-Zero-details-3-2.jpg\" class=\"round1234\" data-original=\"https://www.waveshare.com/img/devkit/ESP32-C3-Zero/ESP32-C3-Zero-details-3-2.jpg\" alt=\"ESP32 C3 Mini Development Board with 2.4GHz Wi-Fi Bluetooth 5 in Pakistan\" loading=\"lazy\">\\n<p><strong>ESP32-C3-Zero-M</strong><br>with pre-soldered header</p>\\n</div>\\n</div>\\n</div>\\n<br>\\n<div>\\n<div class=\"richTitle\">Support C/C++, MicroPython</div>\\n<p class=\"richDesc\">Comprehensive SDK, Dev Resources, Tutorials To Help You Easily Get Started</p>\\n<img src=\"https://www.waveshare.com/img/devkit/ESP32-C3-Zero/ESP32-C3-Zero-details-5.jpg\" data-original=\"https://www.waveshare.com/img/devkit/ESP32-C3-Zero/ESP32-C3-Zero-details-5.jpg\" alt=\"ESP32 C3 Mini Development Board with 2.4GHz Wi-Fi Bluetooth 5 in Pakistan\" loading=\"lazy\">\\n</div>\\n<br>\\n<div>\\n<div class=\"richTitle\">What\\'s On Board</div>\\n<img src=\"https://www.waveshare.com/img/devkit/ESP32-C3-Zero/ESP32-C3-Zero-details-intro.jpg\" data-original=\"https://www.waveshare.com/img/devkit/ESP32-C3-Zero/ESP32-C3-Zero-details-intro.jpg\" alt=\"ESP32 C3 Mini Development Board with 2.4GHz Wi-Fi Bluetooth 5 in Pakistan\" loading=\"lazy\">\\n<div class=\"richGridWrap richGridWrap-valignTop richGridWrap-2c alignl subBlock bgGrey\">\\n<div>\\n<ol>\\n<li><strong>USB Type-C Port</strong></li>\\n<li>\\n<strong>BOOT button</strong><br>Press it and then press the RESET button to enter download mode</li>\\n<li><strong>RESET button</strong></li>\\n<li><strong>WS2812 RGB LED</strong></li>\\n</ol>\\n</div>\\n<span>\\xa0</span>\\n<div>\\n<ol start=\"5\">\\n<li>\\n<strong>ME6217C33M5G</strong><br>Low dropout regulator, 800mA output (Max.)</li>\\n<li>\\n<strong>ESP32-C3FH4 single-core processor</strong><br>up to 160MHz operating frequency</li>\\n<li><strong>2.4G ceramic antenna</strong></li>\\n</ol>\\n</div>\\n</div>\\n</div>\\n<br>\\n<div>\\n<div class=\"richTitle\">Pin definition</div>\\n<img src=\"https://www.waveshare.com/img/devkit/ESP32-C3-Zero/ESP32-C3-Zero-details-inter.jpg\" data-original=\"https://www.waveshare.com/img/devkit/ESP32-C3-Zero/ESP32-C3-Zero-details-inter.jpg\" alt=\"ESP32 C3 Mini Development Board with 2.4GHz Wi-Fi Bluetooth 5 in Pakistan\" loading=\"lazy\">\\n</div>\\n<div>\\n<div class=\"richTitle\">Product Show</div>\\n<div><br></div>\\n<img src=\"https://www.waveshare.com/img/devkit/ESP32-C3-Zero/ESP32-C3-Zero-details-7.jpg\" class=\"round1234\" data-original=\"https://www.waveshare.com/img/devkit/ESP32-C3-Zero/ESP32-C3-Zero-details-7.jpg\" alt=\"ESP32 C3 Mini Development Board with 2.4GHz Wi-Fi Bluetooth 5 in Pakistan\" loading=\"lazy\">\\n</div>\\n<br>\\n<div>\\n<div class=\"richTitle\">outline dimensions</div>\\n<img src=\"https://www.waveshare.com/img/devkit/ESP32-C3-Zero/ESP32-C3-Zero-details-size.jpg\" data-original=\"https://www.waveshare.com/img/devkit/ESP32-C3-Zero/ESP32-C3-Zero-details-size.jpg\" alt=\"ESP32 C3 Mini Development Board with 2.4GHz Wi-Fi Bluetooth 5 in Pakistan\" loading=\"lazy\">\\n</div>\\n<div>\\n<div class=\"richTitle\">Resources &amp; Services</div>\\n<img src=\"https://www.waveshare.com/img/devkit/LCD/common/res_banner.png\" data-original=\"https://www.waveshare.com/img/devkit/LCD/common/res_banner.png\" alt=\"ESP32 C3 Mini Development Board with 2.4GHz Wi-Fi Bluetooth 5 in Pakistan\" loading=\"lazy\">\\n<div class=\"bgGrey\">\\n<strong>Wiki:<span>\\xa0</span></strong><a href=\"https://www.waveshare.com/wiki/ESP32-C3-Zero\" id=\"tab-wiki\" target=\"_blank\" rel=\"noopener\" title=\"Esp32-c3-zero - waveshare wiki\">www.waveshare.com/wiki/ESP32-C3-Zero</a>\\n</div>\\n<div class=\"bgGrey\"><br></div>\\n<div class=\"bgGrey\">\\n<h2><span class=\"mw-headline\" id=\"Environment_Setting\">Environment Setting</span></h2>\\n<p>The software framework for ESP32 series development boards is completed, and you can use CircuitPython, MicroPython, and C/C++ (Arduino, ESP-IDF) for rapid prototyping of product development. Here\\'s a brief introduction to these three development approaches:</p>\\n<ul>\\n<li>CircuitPython is a programming language designed to simplify coding tests and learning on low-cost microcontroller boards. It is an open-source derivative of the MicroPython programming language, primarily aimed at students and beginners. CircuitPython development and maintenance are supported by Adafruit Industries.\\n<ul>\\n<li>You can refer to<span>\\xa0</span><a rel=\"nofollow noreferrer noopener\" class=\"external text\" href=\"https://docs.circuitpython.org/en/latest/shared-bindings/index.html\" target=\"_blank\" title=\"Core modules \u2014 adafruit circuitpython 9.2.4 documentation\">development documentation</a><span>\\xa0</span>for CircuitPython-related applications development.</li>\\n<li>The<span>\\xa0</span><a rel=\"nofollow noreferrer noopener\" class=\"external text\" href=\"https://github.com/adafruit/Adafruit_CircuitPython_Bundle\" target=\"_blank\" title=\"Github - adafruit/adafruit_circuitpython_bundle: a bundle of useful circuitpython libraries ready to use from the filesystem.\">GitHub library</a><span>\\xa0</span>for CircuitPython allows for recompilation for custom development.</li>\\n</ul>\\n</li>\\n</ul>\\n<ul>\\n<li>MicroPython is an efficient implementation of the Python 3 programming language. It includes a small subset of the Python standard library and has been optimized to run on microcontrollers and resource-constrained environments.\\n<ul>\\n<li>You can refer to<span>\\xa0</span><a rel=\"nofollow noreferrer noopener\" class=\"external text\" href=\"https://docs.micropython.org/en/latest/\" target=\"_blank\" title=\"Overview \u2014 micropython latest documentation\">development documentation</a><span>\\xa0</span>for MicroPython-related application development.</li>\\n<li>The<span>\\xa0</span><a rel=\"nofollow noreferrer noopener\" class=\"external text\" href=\"https://github.com/micropython/micropython\" target=\"_blank\" title=\"Github - micropython/micropython: micropython - a lean and efficient python implementation for microcontrollers and constrained systems\">GitHub library</a><span>\\xa0</span>for MicroPython allows for recompilation for custom development.</li>\\n</ul>\\n</li>\\n</ul>\\n<ul>\\n<li>The official libraries and support from Espressif Systems for C/C++ development make it convenient for rapid installation. For Windows 10 system:\\n<ul>\\n<li>Users can select<span>\\xa0</span><a rel=\"nofollow noreferrer noopener\" class=\"external text\" href=\"https://docs.espressif.com/projects/arduino-esp32/en/latest/installing.html\" target=\"_blank\" title=\"Installing - - \u2014 arduino esp32 latest documentation\">Arduino</a>\\n</li>\\n<li>Or Visual Studio Code (<a rel=\"nofollow noreferrer noopener\" class=\"external text\" href=\"https://docs.espressif.com/projects/esp-idf/en/stable/esp32s2/get-started/index.html\" target=\"_blank\" title=\"Get started - esp32-s2 - \u2014 esp-idf programming guide v5.2.5 documentation\">ESP-IDF</a>) as their Integrated Development Environment (IDE).</li>\\n</ul>\\n</li>\\n<li>Mac and Linux operating system users can refer to the<span>\\xa0</span><a rel=\"nofollow noreferrer noopener\" class=\"external text\" href=\"https://docs.espressif.com/projects/esp-idf/en/latest/esp32/get-started/index.html\" target=\"_blank\" title=\"Get started - esp32 - \u2014 esp-idf programming guide latest documentation\">official instructions</a>. Additionally, you can find development manuals for ESP32 series Arduino and ESP-IDF development to assist you in the process.</li>\\n</ul>\\n<h3><span class=\"mw-headline\" id=\"Arduino\">Arduino</span></h3>\\n<p>1. Download and install<span>\\xa0</span><a rel=\"nofollow noreferrer noopener\" class=\"external text\" href=\"https://www.arduino.cc/en/software\" target=\"_blank\" title=\"Arduino ide\">Arduino IDE</a>.<br>2. Install ESP32 on the Arduino IDE as shown below, and you can refer to<span>\\xa0</span><a rel=\"nofollow noreferrer noopener\" class=\"external text\" href=\"https://docs.espressif.com/projects/arduino-esp32/en/latest/installing.html\" target=\"_blank\" title=\"Installing - - \u2014 arduino esp32 latest documentation\">this link</a>.</p>\\n<ul>\\n<li>Fill in the following link in the Additional Boards Manager URLs section of the Settings interface under File -&gt; Preferences and save.</li>\\n</ul>\\n<pre>https://raw.githubusercontent.com/espressif/arduino-esp32/gh-pages/package_esp32_index.json\\n</pre>\\n<p><a href=\"https://www.waveshare.com/wiki/File:ESP32-C3-Zero_-05.jpg\" class=\"image fancybox\"><img alt=\"ESP32-C3-Zero -05.jpg\" src=\"https://www.waveshare.com/w/upload/a/a1/ESP32-C3-Zero_-05.jpg\" decoding=\"async\" loading=\"lazy\" width=\"900\" height=\"709\" data-original=\"https://www.waveshare.com/w/upload/a/a1/ESP32-C3-Zero_-05.jpg\"></a></p>\\n<ul>\\n<li>Search esp32 on Board Manager to install, and restart Arduino IDE to take effect.</li>\\n</ul>\\n<p>3. ESP32-C3-Zero does not have USB to UART chip mounted, you need to use the USB of ESP32-C3 as the download interface and Log print interface, and you need to enable USB CDC when using Arduino IDE.<br><a href=\"https://www.waveshare.com/wiki/File:ESP32-C3-Zero_-06.jpg\" class=\"image fancybox\"><img alt=\"ESP32-C3-Zero -06.jpg\" src=\"https://www.waveshare.com/w/upload/1/13/ESP32-C3-Zero_-06.jpg\" decoding=\"async\" loading=\"lazy\" width=\"442\" height=\"724\" data-original=\"https://www.waveshare.com/w/upload/1/13/ESP32-C3-Zero_-06.jpg\"></a></p>\\n<h3><span class=\"mw-headline\" id=\"MicroPython\">MicroPython</span></h3>\\n<dl>\\n<dd>1. Download and install the latest<span>\\xa0</span><a rel=\"nofollow noreferrer noopener\" class=\"external text\" href=\"https://thonny.org/\" target=\"_blank\" title=\"Thonny, python ide for beginners\">Thonny</a>, open Thonny IDE -&gt; Configure interpreter..., as shown below:</dd>\\n<dd><a href=\"https://www.waveshare.com/wiki/File:CircuitPython_Thonny06.jpg\" class=\"image fancybox\"><img alt=\"CircuitPython Thonny06.jpg\" src=\"https://www.waveshare.com/w/upload/0/0a/CircuitPython_Thonny06.jpg\" decoding=\"async\" loading=\"lazy\" width=\"802\" height=\"761\" data-original=\"https://www.waveshare.com/w/upload/0/0a/CircuitPython_Thonny06.jpg\"></a></dd>\\n<dd>2. Press the BOOT key on the board, connect it to the USB cable, find the device manager or the corresponding COM port, and download or run the demo. For more details, you can see<span>\\xa0</span><a href=\"https://www.waveshare.com/wiki/ESP32-C3-Zero#Hardware_Connection\">#Hardware Connection</a>.</dd>\\n<dd>3. Select the ESP32 series online MPY firmware to download according to the following steps. The Flash content of the development board will be cleared before downloading, and the whole download process lasts about 1 minute.</dd>\\n<dd><a href=\"https://www.waveshare.com/wiki/File:CircuitPython_Thonny03.jpg\" class=\"image fancybox\"><img alt=\"CircuitPython Thonny03.jpg\" src=\"https://www.waveshare.com/w/upload/c/ce/CircuitPython_Thonny03.jpg\" decoding=\"async\" loading=\"lazy\" width=\"900\" height=\"522\" data-original=\"https://www.waveshare.com/w/upload/c/ce/CircuitPython_Thonny03.jpg\"></a></dd>\\n<dd>4. Download the local firmware using flash_download_tool according to the following figure. You can choose either step 3 or step 4, but we recommend to choose step 4.</dd>\\n<dd><a href=\"https://www.waveshare.com/wiki/File:ESP32-C3-Zero_09.jpg\" class=\"image fancybox\"><img alt=\"ESP32-C3-Zero 09.jpg\" src=\"https://www.waveshare.com/w/upload/4/41/ESP32-C3-Zero_09.jpg\" decoding=\"async\" loading=\"lazy\" width=\"426\" height=\"678\" data-original=\"https://www.waveshare.com/w/upload/4/41/ESP32-C3-Zero_09.jpg\"></a></dd>\\n<dd>5. Please refer to<span>\\xa0</span><a rel=\"nofollow noreferrer noopener\" class=\"external text\" href=\"https://github.com/micropython/micropython/releases/tag/v1.18\" target=\"_blank\" title=\"Release boosted performance, board.json metadata, more mimxrt, rp2, samd features \u00b7 micropython/micropython \u00b7 github\">MicroPython Documentation</a><span>\\xa0</span>and<span>\\xa0</span><a rel=\"nofollow noreferrer noopener\" class=\"external text\" href=\"https://github.com/micropython/micropython/releases/tag/v1.18\" target=\"_blank\" title=\"Release boosted performance, board.json metadata, more mimxrt, rp2, samd features \u00b7 micropython/micropython \u00b7 github\">Release Note</a><span>\\xa0</span>to program.</dd>\\n</dl>\\n<h2><span class=\"mw-headline\" id=\"Sample_Demo\">Sample Demo</span></h2>\\n<ul>\\n<li>Please refer to<span>\\xa0</span><a rel=\"nofollow noreferrer noopener\" class=\"external text\" href=\"https://github.com/espressif/arduino-esp32\" target=\"_blank\" title=\"Github - espressif/arduino-esp32: arduino core for the esp32\">arduino-esp32</a><span>\\xa0</span>for Arduino sample demo or File -&gt; examples on the Arduino IDE.</li>\\n<li>Please refer to<span>\\xa0</span><a rel=\"nofollow noreferrer noopener\" class=\"external text\" href=\"https://docs.micropython.org/en/latest/\" target=\"_blank\" title=\"Overview \u2014 micropython latest documentation\">MicroPython</a><span>\\xa0</span>development documentation and sample demo for mpy example.</li>\\n</ul>\\n<h1><span class=\"mw-headline\" id=\"Resource\">Resource</span></h1>\\n<h2><span class=\"mw-headline\" id=\"Document\">Document</span></h2>\\n<ul>\\n<li><a rel=\"nofollow noreferrer noopener\" class=\"external text\" href=\"https://files.waveshare.com/wiki/ESP32-C3-Zero/ESP32-C3-Zero-Sch-V2.pdf\" target=\"_blank\" title=\"Schematic\">Schematic</a></li>\\n<li><a rel=\"nofollow noreferrer noopener\" class=\"external text\" href=\"https://docs.micropython.org/en/latest/\" target=\"_blank\" title=\"Overview \u2014 micropython latest documentation\">MicroPython development documentation</a></li>\\n<li><a rel=\"nofollow noreferrer noopener\" class=\"external text\" href=\"https://docs.espressif.com/projects/arduino-esp32/en/latest/index.html\" target=\"_blank\" title=\"Welcome to esp32 arduino core\u2019s documentation - - \u2014 arduino esp32 latest documentation\">ESP32 Arduino Core\\'s documentation</a></li>\\n<li><a rel=\"nofollow noreferrer noopener\" class=\"external text\" href=\"https://github.com/espressif/arduino-esp32\" target=\"_blank\" title=\"Github - espressif/arduino-esp32: arduino core for the esp32\">arduino-esp32</a></li>\\n<li><a rel=\"nofollow noreferrer noopener\" class=\"external text\" href=\"https://github.com/espressif/esp-idf\" target=\"_blank\" title=\"Github - espressif/esp-idf: espressif iot development framework. Official development framework for espressif socs.\">ESP-IDF</a></li>\\n<li><a rel=\"nofollow noreferrer noopener\" class=\"external text\" href=\"https://docs.espressif.com/projects/esp-idf/en/latest/esp32c3/api-reference/api-conventions.html\" target=\"_blank\" title=\"Api conventions - esp32-c3 - \u2014 esp-idf programming guide latest documentation\">esp32-c3 programming guide</a></li>\\n</ul>\\n<h2><span class=\"mw-headline\" id=\"Demo\">Demo</span></h2>\\n<ul>\\n<li><a rel=\"nofollow noreferrer noopener\" class=\"external text\" href=\"https://files.waveshare.com/wiki/ESP32-C3-Zero/Esp32-c3-zero-code.zip\" target=\"_blank\" title=\"Sample demo\">Sample demo</a></li>\\n</ul>\\n<h2><span class=\"mw-headline\" id=\"Software\">Software</span></h2>\\n<ul>\\n<li><a rel=\"nofollow noreferrer noopener\" class=\"external text\" href=\"https://files.waveshare.com/upload/b/b3/Sscom5.13.1.zip\" target=\"_blank\" title=\"Sscom serial port assistant\">Sscom serial port assistant</a></li>\\n<li><a rel=\"nofollow noreferrer noopener\" class=\"external text\" href=\"https://thonny.org/\" target=\"_blank\" title=\"Thonny, python ide for beginners\">Thonny Python IDE</a></li>\\n<li><a rel=\"nofollow noreferrer noopener\" class=\"external text\" href=\"https://www.arduino.cc/en/software\" target=\"_blank\" title=\"Arduino ide\">Arduino IDE</a></li>\\n</ul>\\n<h2><span class=\"mw-headline\" id=\"Datasheet\">Datasheet</span></h2>\\n<ul>\\n<li><a rel=\"nofollow noreferrer noopener\" class=\"external text\" href=\"https://files.waveshare.com/wiki/ESP32-C3-Zero/esp32-c3_datasheet_en.pdf\" target=\"_blank\" title=\"Esp32-c3 datasheet\">ESP32-C3 Datasheet</a></li>\\n<li><a rel=\"nofollow noreferrer noopener\" class=\"external text\" href=\"https://files.waveshare.com/wiki/ESP32-C3-Zero/XL-0807RGBC-WS2812B.pdf\" target=\"_blank\" title=\"Ws2812b\">WS2812B</a></li>\\n</ul>\\n<h1><span class=\"mw-headline\" id=\"FAQ\">FAQ</span></h1>\\n<div class=\"panel-group\">\\n<div class=\"panel panel-default\">\\n<div class=\"panel-heading\">\\n<h4 class=\"panel-title\"><a data-toggle=\"collapse\" data-parent=\"#accordion\" href=\"https://www.waveshare.com/wiki/ESP32-C3-Zero#accordion1\"><b>Question:</b>Can the ESP32-C3-Zero be powered via pins?</a></h4>\\n</div>\\n<div id=\"accordion1\" class=\"panel-collapse collapse in\">\\n<div class=\"panel-body\">\\n<div>\\xa0<b>Answer:</b>\\n</div>\\n<div>\\n<p>You can use 5V pins and then supply it with 5V.</p>\\n</div>\\n</div>\\n</div>\\n</div>\\n</div>\\n<div class=\"panel-group\">\\n<div class=\"panel panel-default\">\\n<div class=\"panel-heading\">\\n<h4 class=\"panel-title\"><a data-toggle=\"collapse\" data-parent=\"#accordion\" href=\"https://www.waveshare.com/wiki/ESP32-C3-Zero#accordion2\"><b>Question:</b>How to burn ESP32-C3-Zero with hardware debugging, is it just plugging in the type C port and connecting it to the computer?</a></h4>\\n</div>\\n<div id=\"accordion2\" class=\"panel-collapse collapse in\">\\n<div class=\"panel-body\">\\n<div>\\xa0<b>Answer:</b>\\n</div>\\n<div>\\n<p>That\\'s right. If the burn fails, press and hold the boot button to connect to the computer and then release it.</p>\\n</div>\\n</div>\\n</div>\\n</div>\\n</div>\\n<div class=\"panel-group\">\\n<div class=\"panel panel-default\">\\n<div class=\"panel-heading\">\\n<h4 class=\"panel-title\"><a data-toggle=\"collapse\" data-parent=\"#accordion\" href=\"https://www.waveshare.com/wiki/ESP32-C3-Zero#accordion3\"><b>Question:</b>Does ESP32-C3-Zero support ipv6?</a></h4>\\n</div>\\n<div id=\"accordion3\" class=\"panel-collapse collapse in\">\\n<div class=\"panel-body\">\\n<div>\\xa0<b>Answer:</b>\\n</div>\\n<div>\\n<p>ESP32-C3 has ipv6 sample demo, it can support ipv6.</p>\\n</div>\\n</div>\\n</div>\\n</div>\\n</div>\\n</div>\\n</div>\\n</div>', 'vendor': 'Digilog.pk', 'productType': '', 'status': 'ACTIVE', 'createdAt': '2025-03-06T06:44:19Z', 'updatedAt': '2025-08-07T05:12:10Z', 'tags': ['aaaa', 'are', 'inv ok'], 'options': [{'name': 'Title', 'values': ['Default Title']}], 'priceRange': {'minVariantPrice': {'amount': '125000.0', 'currencyCode': 'PKR'}, 'maxVariantPrice': {'amount': '125000.0', 'currencyCode': 'PKR'}}, 'compareAtPriceRange': None, 'totalInventory': 94, 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/49802522886422', 'title': 'Default Title', 'sku': 'b21', 'taxable': False, 'price': '1250.00', 'compareAtPrice': None, 'inventoryQuantity': 94, 'availableForSale': True, 'barcode': '', 'createdAt': '2025-03-06T06:44:20Z', 'updatedAt': '2025-08-06T08:35:01Z', 'inventoryPolicy': 'CONTINUE', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/51582170104086', 'tracked': True, 'measurement': {'weight': {'value': 3.0, 'unit': 'GRAMS'}}, 'unitCost': {'amount': '1100.0', 'currencyCode': 'PKR'}, 'countryCodeOfOrigin': None, 'harmonizedSystemCode': None, 'requiresShipping': True}, 'image': None}}]}, 'media': {'edges': [{'node': {'image': {'id': 'gid://shopify/ImageSource/40273278697750', 'altText': 'ESP32 C3 Mini Development Board with 2.4GHz Wi-Fi Bluetooth 5 in Pakistan', 'url': 'https://cdn.shopify.com/s/files/1/0744/0764/1366/files/esp32-c3-mini-development-board-2-4ghz-wi-fi-bluetooth-5-pakistan-396.webp?v=1741248279', 'width': 560, 'height': 560}}}]}}",
    "tool_call_id": "call_MkQZoNHJ6Eyu7UCGRPfVc3gr"
  },
  {
    "role": "tool",
    "content": "{'id': 'gid://shopify/Product/8351979077910', 'title': 'Arduino Uno R4 Wifi In Pakistan Clone', 'handle': 'arduino-uno-r4-wifi-in-pakistan', 'description': 'The Arduino UNO R4 WiFi combines the processing power and exciting new peripherals of the RA4M1 microcontroller from Renesas with the wireless connectivity power of the ESP32-S3 from Espressif. On top of this, the UNO R4 WiFi offers an on-board 12x8 LED matrix, Qwiic connector, VRTC, and OFF pin, covering all potential needs makers will have for their next project. With the UNO R4 WiFi, you can easily upgrade your project and add wireless connectivity to expand the reach of your current setup. If this is your first project, this board has everything you need to spark your creativity. Let\\'s explore what the UNO R4 WiFi has to offer: Hardware compatibility with UNO form factor: The UNO R4 WiFi maintains the same form factor, pinout, and 5 V operating voltage as its predecessor, the UNO R3, ensuring a seamless transition for existing shields and projects. Expanded memory and faster clock: The UNO R4 WiFi boasts increased memory and a faster clock speed, enabling more precise calculations and effortless handling of complex projects. Extra on-board peripherals: The UNO R4 WiFi introduces a range of on-board peripherals, including a 12-bit DAC, CAN BUS, and OP AMP, providing expanded capabilities and design flexibility. Extended 24 V tolerance: The UNO R4 WiFi supports a wider input voltage range, allowing seamless integration with motors, LED strips, and other actuators using a single power source. HID support: With built-in HID support, the UNO R4 WiFi can simulate a mouse or keyboard when connected to a computer via USB, making it easy to send keystrokes and mouse movements. Wi-Fi\u00ae and Bluetooth\u00ae: The UNO R4 WiFi hosts an ESP32-S3 module, enabling makers to add wireless connectivity to their projects. Combined with the Arduino IoT Cloud, makers can monitor and control their projects remotely. Qwiic connector: The UNO R4 WiFi features a Qwiic I2C connector, allowing easy connection to nodes from the extensive Qwiic ecosystem. Adapter cables also enable compatibility with sensors and actuators based on other connectors. Support for battery-powered RTC: The UNO R4 WiFi includes additional pins, including an \"OFF\" pin to turn off the board and a \"VRTC\" pin to keep the internal Real-Time Clock powered and running. LED matrix: The UNO R4 WiFi incorporates a bright 12x8 red LED matrix, ideal for creative projects with animations or plotting sensor data, eliminating the need for additional hardware. Diagnostics for runtime errors: The UNO R4 WiFi includes an error-catching mechanism that detects runtime crashes and provides detailed explanations and hints about the code line causing the crash. With all these features packed into the well-known UNO form factor, now is the perfect time to upgrade your project or embark on your maker journey. The UNO R4 WiFi offers unparalleled versatility and possibilities for makers of all levels. If you are looking for a lightweight version of the Arduino UNO R4, you can check the Arduino UNO R4 Minima. Arduino IoT Cloud Compatible Use your board on Arduino\\'s IoT Cloud, a simple and fast way to ensure secure communication for all of your connected Things. TRY THE ARDUINO IOT CLOUD FOR FREE Tech specs Board Name Arduino\u00ae UNO R4 WiFi SKU ABX00087 Microcontroller Renesas RA4M1 (Arm\u00ae Cortex\u00ae-M4) USB USB-C\u00ae Programming Port Pins Digital I/O Pins 14 Pins Analog input pins 6 DAC 1 PWM pins 6 Communication UART Yes, 4x I2C Yes, 1x SPI Yes, 1x CAN Yes 1 CAN Bus Power Circuit operating voltage 5 V (ESP32-S3 is 3.3 V) Input voltage (VIN) 6-24 V DC Current per I/O Pin 8 mA Clock speed Main core 48 MHz ESP32-S3 up to 240 MHz Memory RA4M1 256 kB Flash, 32 kB RAM ESP32-S3 384 kB ROM, 512 kB SRAM Dimensions Width 68.85 mm Length 53.34 mm Documentation SCHEMATICS IN .PDF DATASHEET IN .PDF', 'descriptionHtml': '<div data-product-description=\"\" class=\"product-description product-section rte\" id=\"desc\">\\n<div class=\"rte\">\\n<p>The Arduino UNO R4 WiFi combines the processing power and exciting new peripherals of the RA4M1 microcontroller from Renesas with the wireless connectivity power of the ESP32-S3 from Espressif. On top of this, the UNO R4 WiFi offers an on-board 12x8 LED matrix, Qwiic connector, VRTC, and OFF pin, covering all potential needs makers will have for their next project.</p>\\n<p><img src=\"https://digilog.pk/cdn/shop/files/03B-Carousel-UNOR4_Usb-c.webp\" data-original=\"https://cdn.shopify.com/s/files/1/0438/4735/2471/files/03B-Carousel-UNOR4_Usb-c.jpg?v=1687443241\" alt=\"Arduino Uno R4 Wifi In Pakistan\" loading=\"lazy\" data-files=\"03B-Carousel-UNOR4_Usb-c.webp\"></p>\\n<p>With the UNO R4 WiFi, you can easily upgrade your project and add wireless connectivity to expand the reach of your current setup. If this is your first project, this board has everything you need to spark your creativity.</p>\\n<p><iframe width=\"100%\" src=\"https://content.arduino.cc/assets/unor4wifi-video.mp4?autoplay=1\" height=\"315\" frameborder=\"0\" data-mce-src=\"https://content.arduino.cc/assets/unor4wifi-video.mp4?autoplay=1\"></iframe></p>\\n<div class=\"textsummary\">\\xa0</div>\\n<p>Let\\'s explore what the UNO R4 WiFi has to offer:</p>\\n<ul>\\n<li>Hardware compatibility with UNO form factor: The UNO R4 WiFi maintains the same form factor, pinout, and 5 V operating voltage as its predecessor, the UNO R3, ensuring a seamless transition for existing shields and projects.</li>\\n<li>Expanded memory and faster clock: The UNO R4 WiFi boasts increased memory and a faster clock speed, enabling more precise calculations and effortless handling of complex projects.</li>\\n<li>Extra on-board peripherals: The UNO R4 WiFi introduces a range of on-board peripherals, including a 12-bit DAC, CAN BUS, and OP AMP, providing expanded capabilities and design flexibility.</li>\\n<li>Extended 24 V tolerance: The UNO R4 WiFi supports a wider input voltage range, allowing seamless integration with motors, LED strips, and other actuators using a single power source.</li>\\n<li>HID support: With built-in HID support, the UNO R4 WiFi can simulate a mouse or keyboard when connected to a computer via USB, making it easy to send keystrokes and mouse movements.</li>\\n<li>Wi-Fi\u00ae and Bluetooth\u00ae: The UNO R4 WiFi hosts an ESP32-S3 module, enabling makers to add wireless connectivity to their projects. Combined with the Arduino IoT Cloud, makers can monitor and control their projects remotely.</li>\\n<li>Qwiic connector: The UNO R4 WiFi features a Qwiic I2C connector, allowing easy connection to nodes from the extensive Qwiic ecosystem. Adapter cables also enable compatibility with sensors and actuators based on other connectors.</li>\\n<li>Support for battery-powered RTC: The UNO R4 WiFi includes additional pins, including an \"OFF\" pin to turn off the board and a \"VRTC\" pin to keep the internal Real-Time Clock powered and running.</li>\\n<li>LED matrix: The UNO R4 WiFi incorporates a bright 12x8 red LED matrix, ideal for creative projects with animations or plotting sensor data, eliminating the need for additional hardware.</li>\\n<li>Diagnostics for runtime errors: The UNO R4 WiFi includes an error-catching mechanism that detects runtime crashes and provides detailed explanations and hints about the code line causing the crash.</li>\\n</ul>\\n<p>With all these features packed into the well-known UNO form factor, now is the perfect time to upgrade your project or embark on your maker journey. The UNO R4 WiFi offers unparalleled versatility and possibilities for makers of all levels.</p>\\n<p><img src=\"https://digilog.pk/cdn/shop/files/ui-black-hand-point-at.png\" alt=\"Arduino Uno R4 Wifi In Pakistan\" data-original=\"https://content.arduino.cc/assets/ui_black_hand_point_at.png\" loading=\"lazy\" data-files=\"ui-black-hand-point-at.png\">If you are looking for a lightweight version of the Arduino UNO R4, you can check the<span>\\xa0</span><a href=\"https://store.arduino.cc/products/uno-r4-minima\" data-tabindex-value=\"none\" data-tabindex-counter=\"5\" target=\"_blank\" data-mce-href=\"https://store.arduino.cc/uno-r4-minima\" rel=\"noopener noreferrer\" title=\"Arduino\u00ae uno r4 minima \u2014 arduino official store\" aria-label=\"Visit a webpage about Arduino\u00ae uno r4 minima \u2014 arduino official store\">Arduino UNO R4 Minima</a>.</p>\\n<h3>Arduino IoT Cloud Compatible</h3>\\n<div class=\"textsummary\">\\n<p><a href=\"https://cloud.arduino.cc/\" data-tabindex-counter=\"463\" target=\"_blank\" data-mce-href=\"https://www.arduino.cc/cloud\" rel=\"noopener noreferrer\" title=\"Arduino cloud | build, control, monitor your iot projects\" aria-label=\"Visit a webpage about Arduino cloud | build, control, monitor your iot projects\"><img src=\"https://digilog.pk/cdn/shop/files/Cloud-compatability.png\" alt=\"Arduino Uno R4 Wifi In Pakistan\" data-original=\"https://content.arduino.cc/assets/Cloud_compatability.png\" loading=\"lazy\" data-files=\"Cloud-compatability.png\"></a></p>\\n<p><a href=\"https://cloud.arduino.cc/\" data-tabindex-counter=\"463\" target=\"_blank\" data-mce-href=\"https://www.arduino.cc/cloud\" rel=\"noopener noreferrer\" title=\"Arduino cloud | build, control, monitor your iot projects\" aria-label=\"Visit a webpage about Arduino cloud | build, control, monitor your iot projects\"></a>Use your board on Arduino\\'s IoT Cloud, a simple and fast way to ensure secure communication for all of your connected Things.</p>\\n<p><a href=\"https://cloud.arduino.cc/plans/\" data-tabindex-value=\"none\" data-tabindex-counter=\"9\" target=\"_blank\" data-mce-href=\"https://cloud.arduino.cc/plans/\" rel=\"noopener noreferrer\" title=\"Arduino cloud - plans\" aria-label=\"Visit a webpage about Arduino cloud - plans\">TRY THE ARDUINO IOT CLOUD FOR FREE</a></p>\\n</div>\\n</div>\\n<hr>\\n</div>\\n<div class=\"product-section\" id=\"tech-specs\">\\n<h2 class=\"subtitle\">Tech specs</h2>\\n<div class=\"table-tech rte\">\\n<table cellspacing=\"1\" cellpadding=\"1\" border=\"1\">\\n<tbody>\\n<tr>\\n<td rowspan=\"2\" colspan=\"1\">Board</td>\\n<td>Name</td>\\n<td>Arduino\u00ae UNO R4 WiFi</td>\\n</tr>\\n<tr>\\n<td>SKU</td>\\n<td>ABX00087</td>\\n</tr>\\n<tr>\\n<td>Microcontroller</td>\\n<td rowspan=\"1\" colspan=\"2\">Renesas RA4M1 (Arm\u00ae Cortex\u00ae-M4)</td>\\n</tr>\\n<tr>\\n<td>USB</td>\\n<td>USB-C\u00ae</td>\\n<td>Programming Port</td>\\n</tr>\\n<tr>\\n<td>Pins</td>\\n<td>Digital I/O Pins</td>\\n<td>14</td>\\n</tr>\\n<tr>\\n<td rowspan=\"3\" colspan=\"1\">Pins</td>\\n<td>Analog input pins</td>\\n<td>6</td>\\n</tr>\\n<tr>\\n<td>DAC</td>\\n<td>1</td>\\n</tr>\\n<tr>\\n<td>PWM pins</td>\\n<td>6</td>\\n</tr>\\n<tr>\\n<td rowspan=\"4\" colspan=\"1\">Communication</td>\\n<td>UART</td>\\n<td>Yes, 4x</td>\\n</tr>\\n<tr>\\n<td>I2C</td>\\n<td>Yes, 1x</td>\\n</tr>\\n<tr>\\n<td>SPI</td>\\n<td>Yes, 1x</td>\\n</tr>\\n<tr>\\n<td>CAN</td>\\n<td>Yes 1 CAN Bus</td>\\n</tr>\\n<tr>\\n<td rowspan=\"3\" colspan=\"1\">Power</td>\\n<td>Circuit operating voltage</td>\\n<td>5 V (ESP32-S3 is 3.3 V)</td>\\n</tr>\\n<tr>\\n<td>Input voltage (VIN)</td>\\n<td>6-24 V</td>\\n</tr>\\n<tr>\\n<td>DC Current per I/O Pin</td>\\n<td>8 mA</td>\\n</tr>\\n<tr>\\n<td rowspan=\"2\" colspan=\"1\">Clock speed</td>\\n<td>Main core</td>\\n<td>48 MHz</td>\\n</tr>\\n<tr>\\n<td>ESP32-S3</td>\\n<td>up to 240 MHz</td>\\n</tr>\\n<tr>\\n<td rowspan=\"2\" colspan=\"1\">Memory</td>\\n<td>RA4M1</td>\\n<td>256 kB Flash, 32 kB RAM</td>\\n</tr>\\n<tr>\\n<td>ESP32-S3</td>\\n<td>384 kB ROM, 512 kB SRAM</td>\\n</tr>\\n<tr>\\n<td rowspan=\"2\" colspan=\"1\">Dimensions</td>\\n<td>Width</td>\\n<td>68.85 mm</td>\\n</tr>\\n<tr>\\n<td>Length</td>\\n<td>53.34 mm</td>\\n</tr>\\n</tbody>\\n</table>\\n<p>\\xa0<br></p>\\n<h2 class=\"subtitle\">Documentation</h2>\\n<div class=\"rte\">\\n<p><a class=\"resource schematics\" data-tabindex-counter=\"48\" data-tabindex-value=\"none\" href=\"https://docs.arduino.cc/resources/schematics/ABX00087-schematics.pdf\" target=\"_blank\" rel=\"noopener noreferrer\" title=\"Schematics in .pdf\" aria-label=\"Visit a webpage about Schematics in .pdf\">SCHEMATICS IN .PDF</a></p>\\n<p><a class=\"resource datasheet\" data-tabindex-counter=\"48\" data-tabindex-value=\"none\" href=\"https://docs.arduino.cc/resources/datasheets/ABX00087-datasheet.pdf\" target=\"_blank\" rel=\"noopener noreferrer\" title=\"Datasheet in .pdf\" aria-label=\"Visit a webpage about Datasheet in .pdf\">DATASHEET IN .PDF</a></p>\\n<p><br></p>\\n<p><img src=\"https://digilog.pk/cdn/shop/files/03B-Carousel-UNOR4_Battery.webp\" data-original=\"https://cdn.shopify.com/s/files/1/0438/4735/2471/files/03B-Carousel-UNOR4_Battery.jpg?v=1687443240\" alt=\"Arduino Uno R4 Wifi In Pakistan\" loading=\"lazy\" data-files=\"03B-Carousel-UNOR4_Battery.webp\"></p>\\n<p><img src=\"https://digilog.pk/cdn/shop/files/03B-Carousel-UNOR4_Keyboard.webp\" data-original=\"https://cdn.shopify.com/s/files/1/0438/4735/2471/files/03B-Carousel-UNOR4_Keyboard.jpg?v=1687443241\" alt=\"Arduino Uno R4 Wifi In Pakistan\" loading=\"lazy\" data-files=\"03B-Carousel-UNOR4_Keyboard.webp\"></p>\\n<p><img src=\"https://digilog.pk/cdn/shop/files/03B-Carousel-UNOR4_Cloud.webp\" data-original=\"https://cdn.shopify.com/s/files/1/0438/4735/2471/files/03B-Carousel-UNOR4_Cloud.jpg?v=1687443240\" alt=\"Arduino Uno R4 Wifi In Pakistan\" loading=\"lazy\" data-files=\"03B-Carousel-UNOR4_Cloud.webp\"></p>\\n<p>\\xa0</p>\\n<p><img src=\"https://digilog.pk/cdn/shop/files/03B-Carousel-UNOR4_WiFi.webp\" data-original=\"https://cdn.shopify.com/s/files/1/0438/4735/2471/files/03B-Carousel-UNOR4_WiFi.jpg?v=1687443240\" alt=\"Arduino Uno R4 Wifi In Pakistan\" loading=\"lazy\" data-files=\"03B-Carousel-UNOR4_WiFi.webp\"></p>\\n</div>\\n</div>\\n</div>', 'vendor': 'Digilog.pk', 'productType': '', 'status': 'ACTIVE', 'createdAt': '2023-06-29T08:30:08Z', 'updatedAt': '2025-07-12T20:16:26Z', 'tags': ['are', 'inv ok'], 'options': [{'name': 'Title', 'values': ['Default Title']}], 'priceRange': {'minVariantPrice': {'amount': '0.0', 'currencyCode': 'PKR'}, 'maxVariantPrice': {'amount': '0.0', 'currencyCode': 'PKR'}}, 'compareAtPriceRange': None, 'totalInventory': 0, 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/45067801133334', 'title': 'Default Title', 'sku': '', 'taxable': False, 'price': '0.00', 'compareAtPrice': None, 'inventoryQuantity': 0, 'availableForSale': False, 'barcode': '', 'createdAt': '2023-06-29T08:30:08Z', 'updatedAt': '2025-07-12T08:16:16Z', 'inventoryPolicy': 'DENY', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/47166895358230', 'tracked': True, 'measurement': {'weight': {'value': 0.0, 'unit': 'KILOGRAMS'}}, 'unitCost': None, 'countryCodeOfOrigin': None, 'harmonizedSystemCode': None, 'requiresShipping': True}, 'image': None}}]}, 'media': {'edges': [{'node': {'image': {'id': 'gid://shopify/ImageSource/41399239639318', 'altText': 'Arduino Uno R4 Wifi In Pakistan Clone', 'url': 'https://cdn.shopify.com/s/files/1/0744/0764/1366/files/ArduinoUnoR4WifiInPakistan.webp?v=1752309394', 'width': 960, 'height': 960}}}]}}",
    "tool_call_id": "call_8rxU2VJ5HtBtdEhFzBvozQBn"
  },
  {
    "role": "tool",
    "content": "{'id': 'gid://shopify/Product/8191541510422', 'title': 'Arduino Mkr1000 Wifi Board Module', 'handle': 'arduino-mkr1000-wifi-board-module-in-pakistan', 'description': 'Arduino WiFi Board MKR1000 is a powerful board that combines the functionality of the Zero and the Wi-Fi Shield. It is the ideal solution for makers wanting to design IoT projects with minimal previous experience in networking. Arduino MKR1000 has been designed to offer a practical and cost-effective solution for makers seeking to add Wi-Fi connectivity to their projects with minimal previous experience in networking. This WiFi board is based on the Atmel ATSAMW25 SoC (System on Chip), that is part of the SmartConnect family of Atmel Wireless devices, specifically designed for IoT projects and devices. The ATSAMW25 is composed of three main blocks: SAMD21 Cortex-M0+ 32bit low power ARM MCU WINC1500 low power 2.4GHz IEEE\u00ae 802.11 b/g/n Wi-Fi ECC508 CryptoAuthentication The ATSAMW25 includes also a single 1x1 stream PCB Antenna. The design includes a Li-Po charging circuit that allows the Arduino/Genuino MKR1000 to run on battery power or external 5V, charging the Li-Po battery while running on external power. Switching from one source to the other is done automatically. A good 32-bit computational power similar to the Zero board, the usual rich set of I/O interfaces, low power Wi-Fi with a Cryptochip for secure communication, and the ease of use of the Arduino Software (IDE) for code development and programming. All these features make this board the preferred choice for the emerging IoT battery-powered projects in a compact form factor. The USB port can be used to supply power (5V) to the board. This Arduino board is able to run with or without the Li-Po battery connected and has limited power consumption. The MKR1000 Wifi module supports certificate SHA-256. Warning: Unlike most Arduino & Genuino boards, the MKR1000 runs at 3.3V. The maximum voltage that the I/O pins can tolerate is 3.3V. Applying voltages higher than 3.3V to any I/O pin could damage the board. While output to 5V digital devices is possible, bidirectional communication with 5V devices needs proper level shifting. Features Of Arduino WiFi Board Module MKR100: Based on: Atmel ATSAMW25 SoC Operating Voltage: 3.3V USB Input Voltage (recommended): 5V Digital I/O Pins: 8 PWM Digital I/O Pins: 4 Analog Input Pins: 6 Analog Output Pins: 1 Flash Memory: 256Kb SRAM: 32Kb Clock Speed: 48Mhz WiFi, Encryption Chip, LiPo Battery Charger Specifications Of Arduino MKR1000 Board: Microcontroller: SAMD21 Cortex-M0+ 32bit low power ARM MCU Board Power Supply (USB/VIN): 5V Supported Battery(*): Li-Po single cell, 3.7V, 700mAh minimum Circuit Operating Voltage: 3.3V Digital I/O Pins: 8 PWM Pins: 12 (0, 1, 2, 3, 4, 5, 6, 7, 8, 10, A3 - or 18 -, A4 -or 19) UART: 1 SPI: 1 I2C: 1 Analog Input Pins: 7 (ADC 8/10/12 bit) Analog Output Pins: 1 (DAC 10 bit) External Interrupts: 8 (0, 1, 4, 5, 6, 7, 8, A1 -or 16-, A2 - or 17) DC Current per I/O Pin: 7 mA Flash Memory: 256 KB SRAM: 32 KB EEPROM: No Clock Speed: 32.768 kHz (RTC), 48 MHz LED BUILTIN: 6 Full-Speed USB Device and embedded Host: Yes Length: 61.5 mm Width: 25 mm Weight: 32 gr. Package Includes: 1 x Arduino MKR1000 WiFi Best Online Shopping website for Arduino MKR1000 WiFi Board Module in cheap price in Karachi, Lahore, Islamabad, Rawalpindi, Peshawar, Multan, Quetta, Faisalabad and all over Pakistan.', 'descriptionHtml': '<p><span style=\"font-size:14px;\"><strong>Arduino WiFi Board MKR1000</strong>\\xa0is a powerful <a href=\"https://hallroad.org/esp8285-esp-01m-wifi-module-in-pakistan.html\" target=\"_blank\">board </a>that combines the functionality of the Zero and the Wi-Fi Shield. It is the ideal solution for makers wanting to design IoT projects with minimal previous experience in networking.</span></p>\\r\\n\\r\\n<div>\\r\\n<p><span style=\"font-size:14px;\"><strong>Arduino MKR1000 </strong>has been designed to offer a practical and cost-effective solution for makers seeking to add Wi-Fi connectivity to their projects with minimal previous experience in networking. This <strong>WiFi board\\xa0</strong>is based on the Atmel ATSAMW25 SoC (System on Chip), that is part of the SmartConnect family of Atmel Wireless devices, specifically designed for IoT projects and devices.</span></p>\\r\\n\\r\\n<p><span style=\"font-size:14px;\">The ATSAMW25 is composed of three main blocks:</span></p>\\r\\n\\r\\n<ul>\\r\\n\\t<li><span style=\"font-size:14px;\">SAMD21 Cortex-M0+ 32bit low power ARM MCU</span></li>\\r\\n\\t<li><span style=\"font-size:14px;\">WINC1500 low power 2.4GHz IEEE\u00ae 802.11 b/g/n Wi-Fi</span></li>\\r\\n\\t<li><span style=\"font-size:14px;\">ECC508 CryptoAuthentication</span></li>\\r\\n</ul>\\r\\n\\r\\n<p><span style=\"font-size:14px;\">The ATSAMW25 includes also a single 1x1 stream PCB Antenna.</span></p>\\r\\n\\r\\n<p><span style=\"font-size:14px;\">The design includes a Li-Po charging circuit that allows the Arduino/Genuino MKR1000 to run on battery power or external 5V, charging the Li-Po battery while running on external power. Switching from one source to the other is done automatically. A good 32-bit computational power similar to the Zero <a href=\"https://hallroad.org/esp-12f-wifi-module-in-pakistan.html\" target=\"_blank\">board</a>, the usual rich set of I/O interfaces, low power Wi-Fi with a Cryptochip for secure communication, and the ease of use of the Arduino Software (IDE) for code development and programming. All these features make this <strong>board </strong>the preferred choice for the emerging IoT battery-powered projects in a compact form factor. The USB port can be used to supply power (5V) to the board. This\\xa0<strong>Arduino board</strong> is able to run with or without the Li-Po battery connected and has limited power consumption.</span></p>\\r\\n\\r\\n<p><span style=\"font-size:14px;\">The <strong>MKR1000 Wifi module </strong>supports certificate SHA-256.</span></p>\\r\\n\\r\\n<p><span style=\"font-size:14px;\">Warning: Unlike most Arduino &amp; Genuino boards, the MKR1000 runs at 3.3V. The maximum voltage that the I/O pins can tolerate is 3.3V. Applying voltages higher than 3.3V to any I/O pin could damage the board. While output to 5V digital devices is possible, bidirectional communication with 5V devices needs proper level shifting.</span></p>\\r\\n\\r\\n<h2><strong>Features Of Arduino WiFi Board Module\\xa0MKR100:</strong></h2>\\r\\n\\r\\n<ul>\\r\\n\\t<li><span style=\"font-size:14px;\">Based on:\\xa0<a href=\"https://eu.mouser.com/atmel-atsamw25\" title=\"Atmel ATSAMW25 SoC\">Atmel ATSAMW25 SoC</a></span></li>\\r\\n\\t<li><span style=\"font-size:14px;\">Operating Voltage: 3.3V</span></li>\\r\\n\\t<li><span style=\"font-size:14px;\">USB Input Voltage (recommended): 5V</span></li>\\r\\n\\t<li><span style=\"font-size:14px;\">Digital I/O Pins: 8</span></li>\\r\\n\\t<li><span style=\"font-size:14px;\">PWM Digital I/O Pins: 4</span></li>\\r\\n\\t<li><span style=\"font-size:14px;\">Analog Input Pins: 6</span></li>\\r\\n\\t<li><span style=\"font-size:14px;\">Analog Output Pins: 1</span></li>\\r\\n\\t<li><span style=\"font-size:14px;\">Flash Memory: 256Kb</span></li>\\r\\n\\t<li><span style=\"font-size:14px;\">SRAM: 32Kb</span></li>\\r\\n\\t<li><span style=\"font-size:14px;\">Clock Speed: 48Mhz</span></li>\\r\\n\\t<li><span style=\"font-size:14px;\">WiFi, Encryption Chip, LiPo Battery Charger</span></li>\\r\\n</ul>\\r\\n\\r\\n<h2 style=\"margin-top: 0px; padding: 0px; color: rgb(51, 51, 51);\"><strong>Specifications Of\\xa0Arduino MKR1000 Board:</strong></h2>\\r\\n\\r\\n<ol>\\r\\n\\t<li><span style=\"font-size:14px;\"><strong>Microcontroller:</strong> SAMD21 Cortex-M0+ 32bit low power ARM MCU</span></li>\\r\\n\\t<li><span style=\"font-size:14px;\"><strong>Board Power Supply (USB/VIN):</strong>\\xa05V</span></li>\\r\\n\\t<li><span style=\"font-size:14px;\"><strong>Supported Battery(*): </strong>Li-Po single cell, 3.7V, 700mAh minimum</span></li>\\r\\n\\t<li><span style=\"font-size:14px;\"><strong>Circuit Operating Voltage:</strong> 3.3V</span></li>\\r\\n\\t<li><span style=\"font-size:14px;\"><strong>Digital I/O Pins: </strong>8</span></li>\\r\\n\\t<li><span style=\"font-size:14px;\"><strong>PWM Pins: </strong>12 (0, 1, 2, 3, 4, 5, 6, 7, 8, 10, A3 - or 18 -, A4 -or 19)</span></li>\\r\\n\\t<li><span style=\"font-size:14px;\"><strong>UART:</strong> 1</span></li>\\r\\n\\t<li><span style=\"font-size:14px;\"><strong>SPI: </strong>1</span></li>\\r\\n\\t<li><span style=\"font-size:14px;\"><strong>I2C: </strong>1</span></li>\\r\\n\\t<li><span style=\"font-size:14px;\"><strong>Analog Input Pins:</strong> 7 (ADC 8/10/12 bit)</span></li>\\r\\n\\t<li><span style=\"font-size:14px;\"><strong>Analog Output Pins: </strong>1 (DAC 10 bit)</span></li>\\r\\n\\t<li><span style=\"font-size:14px;\"><strong>External Interrupts:</strong> 8 (0, 1, 4, 5, 6, 7, 8, A1 -or 16-, A2 - or 17)</span></li>\\r\\n\\t<li><span style=\"font-size:14px;\"><strong>DC Current per I/O Pin: </strong>7 mA</span></li>\\r\\n\\t<li><span style=\"font-size:14px;\"><strong>Flash Memory: </strong>256 KB</span></li>\\r\\n\\t<li><span style=\"font-size:14px;\"><strong>SRAM: </strong>32 KB</span></li>\\r\\n\\t<li><span style=\"font-size:14px;\"><strong>EEPROM:\\xa0</strong>No</span></li>\\r\\n\\t<li><span style=\"font-size:14px;\"><strong>Clock Speed: </strong>32.768 kHz (RTC), 48 MHz</span></li>\\r\\n\\t<li><span style=\"font-size:14px;\"><strong>LED BUILTIN: </strong>6</span></li>\\r\\n\\t<li><span style=\"font-size:14px;\"><strong>Full-Speed USB Device and embedded Host:</strong>\\xa0 Yes</span></li>\\r\\n\\t<li><span style=\"font-size:14px;\"><strong>Length: </strong>61.5 mm</span></li>\\r\\n\\t<li><span style=\"font-size:14px;\"><strong>Width: </strong>25 mm</span></li>\\r\\n\\t<li><span style=\"font-size:14px;\"><strong>Weight: </strong>32 gr.</span></li>\\r\\n</ol>\\r\\n\\r\\n<h2 style=\"margin-top: 0px; padding: 0px; color: rgb(51, 51, 51);\"><strong>Package Includes:</strong></h2>\\r\\n\\r\\n<ul>\\r\\n\\t<li style=\"margin-top: 0px; padding: 0px; color: rgb(51, 51, 51);\"><span style=\"font-size:14px;\">1 x\\xa0Arduino MKR1000 WiFi</span></li>\\r\\n</ul>\\r\\n\\r\\n<p style=\"margin-top: 0px; padding: 0px; color: rgb(51, 51, 51);\"><span style=\"font-size:14px;\">Best Online Shopping website for Arduino MKR1000 WiFi Board <a href=\"https://hallroad.org/esp-12s-wifi-module-in-pakistan.html\" target=\"_blank\">Module </a>in cheap price in Karachi, Lahore, Islamabad, Rawalpindi, Peshawar, Multan, Quetta, Faisalabad and all over Pakistan.</span></p>\\r\\n\\r\\n<p style=\"margin-top: 0px; padding: 0px; color: rgb(51, 51, 51); text-align: center;\"><img src=\"https://digilog.pk/cdn/shop/files/Arduino-MKR1000-WiFi-Board-Module-In-Lahore-Karachi-Islamabad-Peshawar-Quetta-Mardan-Multan-Sibbi-Hyderabad-Faisalabad.jpg\" data-original=\"https://hallroad.digilog.pk/images/watermarked/detailed/30/Arduino_MKR1000_WiFi_Board_Module_In_Lahore_Karachi_Islamabad_Peshawar_Quetta_Mardan_Multan_Sibbi_Hyderabad_Faisalabad_Rawalpindi_Pakistan__1_.jpg\" alt=\"Arduino Mkr1000 Wifi Board Module\" loading=\"lazy\"><img src=\"https://digilog.pk/cdn/shop/files/Arduino-MKR1000-WiFi-Board-Module-In-Lahore-Karachi-Islamabad-Peshawar-Quetta-Mardan-Multan-Sibbi-Hyderabad-Faisalabad.jpg\" data-original=\"https://hallroad.digilog.pk/images/watermarked/detailed/30/Arduino_MKR1000_WiFi_Board_Module_In_Lahore_Karachi_Islamabad_Peshawar_Quetta_Mardan_Multan_Sibbi_Hyderabad_Faisalabad_Rawalpindi_Pakistan__2_.jpg\" alt=\"Arduino Mkr1000 Wifi Board Module\" loading=\"lazy\"><img src=\"https://digilog.pk/cdn/shop/files/Arduino-MKR1000-WiFi-Board-Module-In-Lahore-Karachi-Islamabad-Peshawar-Quetta-Mardan-Multan-Sibbi-Hyderabad-Faisalabad.jpg?v=1702686121\" data-original=\"https://hallroad.digilog.pk/images/watermarked/detailed/30/Arduino_MKR1000_WiFi_Board_Module_In_Lahore_Karachi_Islamabad_Peshawar_Quetta_Mardan_Multan_Sibbi_Hyderabad_Faisalabad_Rawalpindi_Pakistan__3_.jpg\" alt=\"Arduino Mkr1000 Wifi Board Module\" loading=\"lazy\"></p>\\r\\n</div>', 'vendor': 'Arduino', 'productType': '', 'status': 'ACTIVE', 'createdAt': '2023-04-07T11:23:34Z', 'updatedAt': '2025-05-23T10:19:58Z', 'tags': ['Arduino board', 'inv ok', 'kh', 'wifi board', 'WIFI MODULE'], 'options': [{'name': 'Title', 'values': ['Default Title']}], 'priceRange': {'minVariantPrice': {'amount': '550000.0', 'currencyCode': 'PKR'}, 'maxVariantPrice': {'amount': '550000.0', 'currencyCode': 'PKR'}}, 'compareAtPriceRange': None, 'totalInventory': 0, 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/44490119938326', 'title': 'Default Title', 'sku': 'DELL', 'taxable': False, 'price': '5500.00', 'compareAtPrice': None, 'inventoryQuantity': 0, 'availableForSale': False, 'barcode': None, 'createdAt': '2023-04-07T11:23:35Z', 'updatedAt': '2023-10-27T16:11:30Z', 'inventoryPolicy': 'DENY', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/46589452779798', 'tracked': True, 'measurement': {'weight': {'value': 0.0, 'unit': 'KILOGRAMS'}}, 'unitCost': None, 'countryCodeOfOrigin': None, 'harmonizedSystemCode': None, 'requiresShipping': True}, 'image': None}}]}, 'media': {'edges': [{'node': {'image': {'id': 'gid://shopify/ImageSource/38109541400854', 'altText': 'Arduino Mkr1000 Wifi Board Module', 'url': 'https://cdn.shopify.com/s/files/1/0744/0764/1366/files/Arduino_MKR1000_WiFi_Board_Module_In_Lahore_Karachi_Islamabad_Peshawar_Quetta_Mardan_Multan_Sibbi_Hyderabad_Faisalabad_Rawalpindi_Pakistan__1.webp?v=1723501017', 'width': 500, 'height': 500}}}]}}",
    "tool_call_id": "call_nASzSy2w1B0ORyjxFpybRMpE"
  },
  {
    "role": "tool",
    "content": "{'id': 'gid://shopify/Product/8191882363158', 'title': 'Compatible Wroom Esp32 Wifi Based Microcontroller Development Board Nodemcu CH9102X', 'handle': 'esp32-nodemcu', 'description': 'Wroom ESP32 WiFi-Based Microcontroller Development Board Nodemcu Introducing the Wroom ESP32, a powerful and versatile microcontroller development board that leverages the capabilities of the ESP32 Wi-Fi chip. This board is ideal for IoT projects, home automation, and other applications requiring wireless connectivity. Key Features: ESP32 Wi-Fi Chip: Provides reliable and high-performance wireless communication. Microcontroller: Offers powerful processing capabilities for complex applications. GPIO Pins: Enables easy interfacing with various sensors, actuators, and other devices. USB Interface: Allows for easy programming and debugging. Benefits of Using the Wroom ESP32: IoT Development: Create innovative IoT projects with ease. Home Automation: Control your home appliances and devices remotely. Industrial Automation: Automate tasks and processes in industrial settings. Wearable Technology: Develop smart wearables with wireless connectivity. Educational Purposes: Learn about microcontroller programming and IoT development. Order Your Wroom ESP32 Today! Start building your next project with the Wroom ESP32. Board installation linkhttps://randomnerdtutorials.com/installing-the-esp32-board-in-arduino-ide-windows-instructions/ Youtube Tutorial: https://www.youtube.com/watch?v=mJcxnaR08Dg Blog:Building an IoT Cloud with Arduino IoT Cloud and ESP32: A Step-by-Step Guide Package Includes : 1 x ESP WROOM 32/ ESP32 WiFi-BT-BLE MCU Module.', 'descriptionHtml': '<p data-sourcepos=\"3:1-3:68\"><strong>Wroom ESP32 WiFi-Based Microcontroller Development Board Nodemcu</strong></p>\\n<p data-sourcepos=\"5:1-5:27\">Introducing the Wroom ESP32, a powerful and versatile microcontroller development board that leverages the capabilities of the ESP32 Wi-Fi chip. This board is ideal for IoT projects, home automation, and other applications requiring wireless connectivity.</p>\\n<p data-sourcepos=\"7:1-7:17\"><strong>Key Features:</strong></p>\\n<ul data-sourcepos=\"9:1-10:1\">\\n<li data-sourcepos=\"9:1-9:86\">\\n<strong>ESP32 Wi-Fi Chip:</strong> Provides reliable and high-performance wireless communication.</li>\\n<li data-sourcepos=\"10:1-10:1\">\\n<strong>Microcontroller:</strong> Offers powerful processing capabilities for complex applications.</li>\\n<li data-sourcepos=\"11:1-11:93\">\\n<strong>GPIO Pins:</strong> Enables easy interfacing with various sensors, actuators, and other devices.</li>\\n<li data-sourcepos=\"13:1-14:0\">\\n<strong>USB Interface:</strong> Allows for easy programming and debugging.</li>\\n</ul>\\n<p data-sourcepos=\"15:1-15:38\"><strong>Benefits of Using the Wroom ESP32:</strong></p>\\n<ul data-sourcepos=\"17:1-22:0\">\\n<li data-sourcepos=\"17:1-17:64\">\\n<strong>IoT Development:</strong> Create innovative IoT projects with ease.</li>\\n<li data-sourcepos=\"18:1-18:73\">\\n<strong>Home Automation:</strong> Control your home appliances and devices remotely.</li>\\n<li data-sourcepos=\"19:1-19:81\">\\n<strong>Industrial Automation:</strong> Automate tasks and processes in industrial settings.</li>\\n<li data-sourcepos=\"20:1-20:78\">\\n<strong>Wearable Technology:</strong> Develop smart wearables with wireless connectivity.</li>\\n<li data-sourcepos=\"21:1-22:0\">\\n<strong>Educational Purposes:</strong> Learn about microcontroller programming and IoT development.</li>\\n</ul>\\n<p data-sourcepos=\"23:1-23:33\"><strong>Order Your Wroom ESP32 Today!</strong></p>\\n<p data-sourcepos=\"25:1-25:52\">Start building your next project with the Wroom ESP32.</p>\\n<p>Board installation link<br><a aria-label=\"Visit a webpage about Installing esp32 in arduino ide (windows, mac os x, linux) | random nerd tutorials\" title=\"Installing esp32 in arduino ide (windows, mac os x, linux) | random nerd tutorials\" href=\"https://randomnerdtutorials.com/installing-the-esp32-board-in-arduino-ide-windows-instructions/\">https://randomnerdtutorials.com/installing-the-esp32-board-in-arduino-ide-windows-instructions/</a></p>\\n<h5><span>Youtube Tutorial:</span></h5>\\n<p><span><a aria-label=\"Visit a webpage about Tutorial: quickly getting started with esp32 / esp32s in 5 - 10 minutes! Beginner friendly! Arduino! - youtube\" title=\"Tutorial: quickly getting started with esp32 / esp32s in 5 - 10 minutes! Beginner friendly! Arduino! - youtube\" href=\"https://www.youtube.com/watch?v=mJcxnaR08Dg\">https://www.youtube.com/watch?v=mJcxnaR08Dg</a></span></p>\\n<p><strong>Blog:<br><a aria-label=\"Visit a webpage about Building an IoT Cloud with Arduino IoT Cloud and ESP32: A Step-by-Step Guide\" title=\"Building an IoT Cloud with Arduino IoT Cloud and ESP32: A Step-by-Step Guide\" href=\"https://ucbeginner.com/cgi-sys/suspendedpage.cgi\">Building an IoT Cloud with Arduino IoT Cloud and ESP32: A Step-by-Step Guide</a><br></strong></p>\\n<h6><strong>Package Includes :</strong></h6>\\n<ul>\\n<li><span style=\"font-size: 14px;\">1 x ESP WROOM 32/ ESP32 WiFi-BT-BLE MCU Module.</span></li>\\n</ul>\\n<p><img loading=\"lazy\" alt=\"Wroom Esp32 Wifi Based Microcontroller Development Board\" data-original=\"https://storage.googleapis.com/engage-seoimages/digilogpk.myshopify.com/8191882363158/esp32developmentboardselectionguideinArduinoide.webp\" src=\"https://digilog.pk/cdn/shop/files/esp32developmentboardselectionguideinArduinoide.webp?v=1753080540\"></p>', 'vendor': 'china', 'productType': '', 'status': 'ACTIVE', 'createdAt': '2023-04-07T16:42:19Z', 'updatedAt': '2025-08-08T11:08:34Z', 'tags': ['air', 'bluetooth', 'ESP', 'esp32', 'ESP8266', 'inv ok', 'monstor', 'nodemcu', 'nodemuc', 'si', 'wifi', 'wifi bluetooth', 'wifi development board'], 'options': [{'name': 'Title', 'values': ['Default Title']}], 'priceRange': {'minVariantPrice': {'amount': '107500.0', 'currencyCode': 'PKR'}, 'maxVariantPrice': {'amount': '107500.0', 'currencyCode': 'PKR'}}, 'compareAtPriceRange': None, 'totalInventory': 558, 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/44491085611286', 'title': 'Default Title', 'sku': 'B99,krt95,krt100,IMP500,TH250,A', 'taxable': False, 'price': '1075.00', 'compareAtPrice': None, 'inventoryQuantity': 558, 'availableForSale': True, 'barcode': '', 'createdAt': '2023-04-07T16:42:19Z', 'updatedAt': '2025-08-08T11:08:32Z', 'inventoryPolicy': 'CONTINUE', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/46590420156694', 'tracked': True, 'measurement': {'weight': {'value': 0.002, 'unit': 'KILOGRAMS'}}, 'unitCost': {'amount': '880.0', 'currencyCode': 'PKR'}, 'countryCodeOfOrigin': 'CN', 'harmonizedSystemCode': None, 'requiresShipping': True}, 'image': None}}]}, 'media': {'edges': [{'node': {'image': {'id': 'gid://shopify/ImageSource/41451696226582', 'altText': 'Compatible Wroom Esp32 Wifi Based Microcontroller Development Board Nodemcu CH9102X', 'url': 'https://cdn.shopify.com/s/files/1/0744/0764/1366/files/CompatibleWroomEsp32WifiBasedMicrocontrollerDevelopmentBoardNodemcuCH9102X_2.webp?v=1753081462', 'width': 1024, 'height': 1024}}}]}}",
    "tool_call_id": "call_Ecd82duOAeL53mjEvmS5a8nQ"
  },
  {
    "role": "tool",
    "content": "{'id': 'gid://shopify/Product/8191878430998', 'title': 'Esp01 Esp 01 Esp8266 Wifi Module', 'handle': 'esp-01-esp8266-wifi-module-in-pakistan', 'description': 'The ESP 01 or ESP8266 WiFi Module is a self-contained SOC. ESP8266 serial module has integrated TCP/IP protocol stack that can give any microcontroller access to your WiFi network. The esp8266 wifi module Arduino is capable of either hosting an application or offloading all Wi-Fi networking functions from another application processor. Each ESP8266 module comes pre-programmed with an AT command set firmware, meaning, you can simply hook this up to your Arduino device and get about as much WiFi-ability as a WiFi Shield offers (and that\u2019s just out of the box)! The esp 01 connect to wifi module is an extremely cost-effective board with a huge, and ever-growing, community. Features & Specifications Of ESP8266 WiFi ESP-01 Serial Module: 802.11 b/g/n Wi-Fi Direct (P2P), soft-AP Integrated TCP/IP protocol stack Integrated TR switch, balun, LNA, power amplifier and matching network Integrated PLLs, regulators, DCXO and power management units +19.5dBm output power in 802.11b mode Power down leakage current of <10uA 1MB Flash Memory Integrated low power 32-bit CPU could be used as an application processor SDIO 1.1 / 2.0, SPI, UART STBC, 1\u00d71 MIMO, 2\u00d71 MIMO A-MPDU & A-MSDU aggregation & 0.4ms guard interval Wake up and transmit packets in < 2ms Standby power consumption of < 1.0mW (DTIM3) Package Includes: 1 x ESP 01 ESP8266 WiFi Module Best Online Shopping website for ESP01 ESP8266 WiFi Module Best Arduino ESP Wifi Module ESP 01 Connect to Wifi in cheap price in Karachi, Lahore, Islamabad, Rawalpindi, Peshawar, Multan, Quetta, Faisalabad and all over Pakistan.', 'descriptionHtml': '<p><span class=\"redactor-selection-marker\"></span></p>\\r\\n\\r\\n<p><span style=\"font-size:14px;\">The <strong>ESP 01 or ESP8266 WiFi <a href=\"https://hallroad.org/esp32.html\" target=\"_blank\">Module</a></strong><a href=\"https://hallroad.org/esp32.html\" target=\"_blank\"> </a>is a self-contained SOC.<strong> ESP8266 serial module</strong>\\xa0has\\xa0integrated TCP/IP protocol stack that can give any microcontroller access to your WiFi network. The <strong>esp8266 wifi module Arduino</strong> is capable of either hosting an application or offloading all Wi-Fi networking functions from another application processor. Each <strong>ESP8266 module</strong> comes pre-programmed with an AT command set firmware, meaning, you can simply hook this up to your Arduino device and get about as much WiFi-ability as a WiFi Shield offers (and that\u2019s just out of the box)! The<strong> esp 01 connect to wifi <a href=\"/products/wemos-d1-mini-wifi-esp8266\" target=\"_blank\" rel=\"noopener noreferrer\" title=\"Wemos d1 mini wifi development board esp8266 in pakistan \u2013 digilog.pk\" aria-label=\"Visit a webpage about Wemos d1 mini wifi development board esp8266 in pakistan \u2013 digilog.pk\">module</a></strong><a href=\"/products/wemos-d1-mini-wifi-esp8266\" target=\"_blank\" rel=\"noopener noreferrer\" title=\"Wemos d1 mini wifi development board esp8266 in pakistan \u2013 digilog.pk\" aria-label=\"Visit a webpage about Wemos d1 mini wifi development board esp8266 in pakistan \u2013 digilog.pk\">\\xa0</a>is an extremely cost-effective board with a huge, and ever-growing, community.</span></p>\\r\\n\\r\\n<p style=\"text-align: center;\"><iframe allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"\" frameborder=\"0\" height=\"480\" src=\"https://www.youtube.com/embed/P8Z-ZHwNeNI\" width=\"940\"></iframe></p>\\r\\n\\r\\n<h2><strong>Features &amp; Specifications Of\\xa0ESP8266 WiFi ESP-01 Serial Module:</strong></h2>\\r\\n\\r\\n<ul>\\r\\n\\t<li><span style=\"font-size:14px;\">802.11 b/g/n</span></li>\\r\\n\\t<li><span style=\"font-size:14px;\">Wi-Fi Direct (P2P), soft-AP</span></li>\\r\\n\\t<li><span style=\"font-size:14px;\">Integrated TCP/IP protocol stack</span></li>\\r\\n\\t<li><span style=\"font-size:14px;\">Integrated TR switch, balun, LNA, power amplifier and matching network</span></li>\\r\\n\\t<li><span style=\"font-size:14px;\">Integrated PLLs, regulators, DCXO and power management units</span></li>\\r\\n\\t<li><span style=\"font-size:14px;\">+19.5dBm output power in 802.11b mode</span></li>\\r\\n\\t<li><span style=\"font-size:14px;\">Power down leakage current of &lt;10uA</span></li>\\r\\n\\t<li><span style=\"font-size:14px;\">1MB Flash Memory</span></li>\\r\\n\\t<li><span style=\"font-size:14px;\">Integrated low power 32-bit CPU could be used as an application processor</span></li>\\r\\n\\t<li><span style=\"font-size:14px;\">SDIO 1.1 / 2.0, SPI, UART</span></li>\\r\\n\\t<li><span style=\"font-size:14px;\">STBC, 1\u00d71 MIMO, 2\u00d71 MIMO</span></li>\\r\\n\\t<li><span style=\"font-size:14px;\">A-MPDU &amp; A-MSDU aggregation &amp; 0.4ms guard interval</span></li>\\r\\n\\t<li><span style=\"font-size:14px;\">Wake up and transmit packets in &lt; 2ms</span></li>\\r\\n\\t<li><span style=\"font-size:14px;\">Standby power consumption of &lt; 1.0mW (DTIM3)</span></li>\\r\\n</ul>\\r\\n\\r\\n<h2><strong>Package Includes:</strong></h2>\\r\\n\\r\\n<ul>\\r\\n\\t<li><span style=\"font-size:14px;\">1 x ESP 01\\xa0ESP8266\\xa0WiFi Module</span></li>\\r\\n</ul>\\r\\n\\r\\n<p><span style=\"font-size:14px;\">Best Online Shopping website for ESP01 ESP8266 WiFi <a href=\"/products/esp-12-esp8266-wifi-module-wireless-iot-board-module\" target=\"_blank\" rel=\"noopener noreferrer\" title=\"Esp-12 esp8266-12e wifi module wireless iot board module \u2013 digilog.pk\" aria-label=\"Visit a webpage about Esp-12 esp8266-12e wifi module wireless iot board module \u2013 digilog.pk\">Module</a>\\xa0Best Arduino ESP Wifi Module ESP 01 Connect to Wifi in cheap price in Karachi, Lahore, Islamabad, Rawalpindi, Peshawar, Multan, Quetta, Faisalabad and all over Pakistan.</span></p>\\r\\n\\r\\n<p style=\"text-align: center;\"><img src=\"/products/esp-01-esp8266-wifi-module-in-pakistan\"><img src=\"https://digilog.pk/cdn/shop/files/ESP01-ESP8266-WiFi-Module-In-Lahore-Karachi-Islamabad-Peshawar-Quetta-Mardan-Multan-Sibbi-Hyderabad-Faislabad-Pakistan.jpg\" data-original=\"https://hallroad.digilog.pk/images/watermarked/detailed/29/ESP01_ESP8266_WiFi_Module_In_Lahore_Karachi_Islamabad_Peshawar_Quetta_Mardan_Multan_Sibbi_Hyderabad_Faislabad_Pakistan__3_.jpg\" alt=\"Esp01 Esp 01 Esp8266 Wifi Module\" loading=\"lazy\" data-files=\"ESP01-ESP8266-WiFi-Module-In-Lahore-Karachi-Islamabad-Peshawar-Quetta-Mardan-Multan-Sibbi-Hyderabad-Faislabad-Pakistan.jpg\"><img src=\"https://digilog.pk/cdn/shop/files/ESP01-ESP8266-WiFi-Module-In-Lahore-Karachi-Islamabad-Peshawar-Quetta-Mardan-Multan-Sibbi-Hyderabad-Faislabad-Pakistan.jpg\" data-original=\"https://hallroad.digilog.pk/images/watermarked/detailed/29/ESP01_ESP8266_WiFi_Module_In_Lahore_Karachi_Islamabad_Peshawar_Quetta_Mardan_Multan_Sibbi_Hyderabad_Faislabad_Pakistan__2_.jpg\" alt=\"Esp01 Esp 01 Esp8266 Wifi Module\" loading=\"lazy\" data-files=\"ESP01-ESP8266-WiFi-Module-In-Lahore-Karachi-Islamabad-Peshawar-Quetta-Mardan-Multan-Sibbi-Hyderabad-Faislabad-Pakistan.jpg\"></p>\\r\\n\\r\\n<p style=\\'margin-top: 0px; margin-bottom: 2.857em; color: rgb(104, 108, 111); font-family: \"Open Sans\", HelveticaNeue-Light, \"Helvetica Neue Light\", \"Helvetica Neue\", Helvetica, Arial, \"Lucida Grande\", sans-serif; letter-spacing: -0.14px; background-color: rgb(255, 255, 255); text-align: center;\\'><img alt=\"Esp01 Esp 01 Esp8266 Wifi Module\" src=\"https://digilog.pk/cdn/shop/files/esp8266-reflash-firmware.webp\" data-original=\"https://iot-playground.com/images/articles/016/esp8266-reflash-firmware.png\" loading=\"lazy\" data-files=\"esp8266-reflash-firmware.webp\"></p>\\r\\n\\r\\n<p style=\\'margin-top: 0px; margin-bottom: 2.857em; color: rgb(104, 108, 111); font-family: \"Open Sans\", HelveticaNeue-Light, \"Helvetica Neue Light\", \"Helvetica Neue\", Helvetica, Arial, \"Lucida Grande\", sans-serif; letter-spacing: -0.14px; background-color: rgb(255, 255, 255); text-align: center;\\'><img alt=\"ESP8266 WiFi Internet real time clock - Simple Projects\" src=\"https://digilog.pk/cdn/shop/files/esp8266-esp-01-internet-wifi-real-time-clock.jpg\" data-original=\"https://simple-circuit.com/wp-content/uploads/2018/06/esp8266-esp-01-internet-wifi-real-time-clock.jpg\" loading=\"lazy\" data-files=\"esp8266-esp-01-internet-wifi-real-time-clock.jpg\"></p>\\r\\n\\r\\n<p>\\xa0</p>', 'vendor': 'China', 'productType': '', 'status': 'ACTIVE', 'createdAt': '2023-04-07T16:39:55Z', 'updatedAt': '2025-08-04T14:53:09Z', 'tags': ['air', 'arduino wifi', 'ESP WIFI MODULE', 'ESP8266', 'im', 'inv ok', 'nodemcu', 'WIFI MODULE', 'wireless wifi module'], 'options': [{'name': 'Title', 'values': ['Default Title']}], 'priceRange': {'minVariantPrice': {'amount': '29000.0', 'currencyCode': 'PKR'}, 'maxVariantPrice': {'amount': '29000.0', 'currencyCode': 'PKR'}}, 'compareAtPriceRange': None, 'totalInventory': 67, 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/44491079581974', 'title': 'Default Title', 'sku': 'B81,KRT56,IMP200,Th100,A', 'taxable': False, 'price': '290.00', 'compareAtPrice': None, 'inventoryQuantity': 67, 'availableForSale': True, 'barcode': None, 'createdAt': '2023-04-07T16:39:55Z', 'updatedAt': '2025-08-02T16:57:36Z', 'inventoryPolicy': 'CONTINUE', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/46590414127382', 'tracked': True, 'measurement': {'weight': {'value': 0.002, 'unit': 'KILOGRAMS'}}, 'unitCost': {'amount': '270.0', 'currencyCode': 'PKR'}, 'countryCodeOfOrigin': None, 'harmonizedSystemCode': None, 'requiresShipping': True}, 'image': None}}]}, 'media': {'edges': [{'node': {'image': {'id': 'gid://shopify/ImageSource/38110941511958', 'altText': 'Esp01 Esp 01 Esp8266 Wifi Module', 'url': 'https://cdn.shopify.com/s/files/1/0744/0764/1366/files/ESP01_ESP_01_ESP8266_WiFi_Module_lahore_islamabad_karachi_multan_rawalpindi_1f5c781b-3dd8-4918-8043-18e105f0fd20.webp?v=1723514497', 'width': 800, 'height': 800}}}]}}",
    "tool_call_id": "call_IjawDtCm0rtqbvQ3QjPGApFK"
  },
  {
    "role": "user",
    "content": "PLease recommend some microcontrollers with WiFi capabilities suitable for IoT projects.",
    "name": "Customer"
  },
  {
    "role": "assistant",
    "content": "Here are some recommended microcontrollers with WiFi capabilities suitable for IoT projects:\n\n1. Raspberry Pi Pico W\n   - Dual-core ARM Cortex M0+ processor, up to 133 MHz\n   - 264kB SRAM, 2MB onboard Flash\n   - Infineon CYW43439 wireless chip with 2.4GHz 802.11n WiFi\n   - 26 multi-function GPIO pins\n   - Supports MicroPython and C/C++\n   - Ideal for projects like remote sensor readings, home automation, and mini web servers\n   - Price: PKR 2700\n\n2. ESP32-C3 Mini Development Board\n   - RISC-V 32-bit single-core processor, up to 160MHz\n   - 400KB SRAM, 4MB onboard Flash\n   - 2.4GHz WiFi (802.11 b/g/n) and Bluetooth 5 (LE)\n   - Onboard ceramic antenna, castellated module for direct soldering\n   - Supports CircuitPython, MicroPython, and C/C++ (Arduino, ESP-IDF)\n   - Price: PKR 1250\n\n3. Arduino UNO R4 WiFi\n   - Renesas RA4M1 Cortex-M4 microcontroller with ESP32-S3 for WiFi and Bluetooth\n   - Onboard 12x8 LED matrix and Qwiic I2C connector\n   - Expanded memory and faster clock\n   - Compatible with Arduino IoT Cloud for remote monitoring and control\n   - Price: Currently unavailable\n\n4. Arduino MKR1000 WiFi Board Module\n   - Atmel ATSAMW25 SoC with SAMD21 Cortex-M0+ MCU\n   - 2.4GHz WiFi IEEE 802.11 b/g/n with ECC508 CryptoAuthentication\n   - Li-Po battery charging circuit for portable IoT projects\n   - Good choice for beginners with minimal networking experience\n   - Price: PKR 5500 (currently unavailable)\n\n5. ESP32 NodeMCU Development Board\n   - Based on ESP32 WiFi chip with Bluetooth\n   - Powerful and versatile for IoT, home automation, and wearable applications\n   - GPIO pins for interfacing sensors and actuators\n   - Price: PKR 1075\n\n6. ESP-01 ESP8266 WiFi Module\n   - Integrated TCP/IP protocol stack and low power consumption\n   - 1MB Flash memory and 32-bit CPU\n   - Supports 802.11 b/g/n WiFi\n   - Cost-effective and widely used module for adding WiFi to microcontroller projects\n   - Price: PKR 290\n\nIf you want detailed specifications or purchase links for any of these, please let me know!"
  },
  {
    "role": "user",
    "content": "great work",
    "name": "Customer"
  },
  {
    "role": "assistant",
    "content": "Thank you! If you have any more questions or need further assistance with your projects, feel free to ask. Happy tinkering and good luck with your IoT projects!"
  }]
}