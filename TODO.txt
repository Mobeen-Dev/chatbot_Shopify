Phase #1 
    Basic openAi api Calling + Prompt Engineering âœ…
    Product Knowledge Aware âœ…
    
Phase #2
    Session Based 
        Short-Term Memory âœ…
        Long-Term Memory  
    Recommend Products   âœ…

Phase #3
    Retrieve Products | Orders Data âœ…
    Handle Cart | Checkout  ðŸš§
    -> cart-functionality - create âœ… - delete - update
    Redirect to Different Pages

After MVP-2
    Refactor Api function 
    Refactor App Endpoints
    Refactor RAG Module

manage session id 

In classes Apply Direct Access Restriction

Bring String into ENV / CONFIG âœ… --> on-going

-> Turn property into function in MODEL.PY  
-> only shrink response with no product detected
-> Rewrite Hybrid Approach for Serialization of Chat


Merging:
    openai tool list + functions + from Gpt Response to Output Appending

Centeralized All the Object in FastApi 

Dynamic Ui loading 

Server.py ln 156 function selection and respone appending in a clean seperate function âœ…

handle detail of product âœ…
no product if quantity is zero âœ…

Try-Catch for code

Back-End:
    Server Building
    Ci/CD Pipeline
    MCP Connection 

Front-End:
    - Develop a theme extension for Shopify Store as frontend agent for llm powered chat
    - Unselectable Text âœ…
    - Markdown renderer on frontend âœ…
 

 ----------------------------------------------
    PipeLine for Updating RAG & handle_to_id table 
 ----------------------------------------------


 ----------------------------------------------------------------------------------------------------

Admin Panel Features:
    - Enable/Disable Remember Mode âœ…
    - Switch Languages
    - custom MCP / Backend URL âœ…
    - Temperature settings âœ…
    - Max Token per Message
    - Max Tokens per Chat
    - Special Tone for Some Occusion

Future Goals:
    Front-End for Analytics
    Chat Record 
    Limits Settings
    
Cost Saving Plans:
    stateful - prompt engineering - summary of chat - only add summary in the next prompt (after 10-th message)
    or 
    Implement this also for each message when WebSearch is ON
    

Optimization:
    Efficient Remember Mode




