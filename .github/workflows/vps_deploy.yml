name: üöÄ Deploy ChatBot

on:
  push:
    branches: [ digilog-deployment, deploy ]
    # branches: [ main, master ]
  workflow_dispatch: # Manual trigger button in GitHub UI

jobs:
  deploy:
    runs-on: [self-hosted, Linux, X64]
    
    steps:
    - name: üì• Checkout Code
      uses: actions/checkout@v4
    - name: Debug info
      run: echo "Branch is ${{ github.ref }} / ${{ github.head_ref }}"
      
    # - name: üõë Stop Current Services
    #   run: |
    #     echo "Stopping project-specific services..."
    #     docker stop broker-rabbitmq fastapi_server 2>/dev/null || echo "Containers not running"
    #     docker rm broker-rabbitmq fastapi_server 2>/dev/null || echo "Containers not found"
        
    # - name: üßπ Clean Up Old Images (Optional)
    #   run: |
    #     echo "Cleaning up old images..."
    #     docker system prune -f || true
        
    # - name: üèóÔ∏è Build and Start Services
    #   run: |
    #     echo "Building and starting services..."
    #     docker-compose up -d --build
        
    # - name: ‚è±Ô∏è Wait for Services to Start
    #   run: |
    #     echo "Waiting for services to initialize..."
    #     sleep 60
        
    # - name: üê∞ Check RabbitMQ Health
    #   run: |
    #     echo "Checking RabbitMQ health..."
    #     for i in {1..12}; do
    #       if docker exec broker-rabbitmq rabbitmq-diagnostics status 2>/dev/null; then
    #         echo "‚úÖ RabbitMQ is healthy!"
    #         break
    #       fi
    #       echo "Attempt $i/12: RabbitMQ not ready, waiting 10s..."
    #       sleep 10
    #       if [ $i -eq 12 ]; then
    #         echo "‚ùå RabbitMQ health check failed!"
    #         exit 1
    #       fi
    #     done
        
    # - name: üè• Check FastAPI Health
    #   run: |
    #     echo "Checking FastAPI health..."
    #     for i in {1..10}; do
    #       if curl -f http://localhost:8000/health 2>/dev/null; then
    #         echo "‚úÖ FastAPI is healthy!"
    #         break
    #       fi
    #       echo "Attempt $i/10: FastAPI not ready, waiting 10s..."
    #       sleep 10
    #       if [ $i -eq 10 ]; then
    #         echo "‚ùå FastAPI health check failed!"
    #         exit 1
    #       fi
    #     done
        
    # - name: ‚úÖ Deployment Success
    #   run: |
    #     echo "üéâ Deployment completed successfully!"
    #     echo "FastAPI: http://localhost:8000"
    #     echo "RabbitMQ Management: http://localhost:15672"
    #     docker-compose ps
        
    # - name: üö® Rollback on Failure
    #   if: failure()
    #   run: |
    #     echo "üí• Deployment failed! Attempting rollback..."
    #     docker-compose down
        
    #     # Try to start previous working version
    #     if docker image ls server:backup >/dev/null 2>&1; then
    #       echo "Found backup image, attempting rollback..."
    #       docker tag server:backup server:latest
    #       docker-compose up -d
    #       sleep 30
    #       if curl -f http://localhost:8000/health 2>/dev/null; then
    #         echo "‚úÖ Rollback successful!"
    #       else
    #         echo "‚ùå Rollback failed!"
    #       fi
    #     else
    #       echo "No backup image available"
    #     fi
